version: 3.0

defaultConnection: lab
defaultKey: api

name: "The name of the project"
language: cs
ownerName: "the customers name, if any"

connections:
  lab:
    name: lab
    description: This connection is defined in project.yaml
    connectionString: Data Source=patest01;Password=%**PWD_PATOLAB**%;User name=Test
    schema: dbo
    type: mssql
    mapping: 
      IsActive:
        Name: "IsActive"
        isIgnored: true
        trueValue: 1 | true | yes
        falseValue: 0 | false | no
        deletedMarker: true
      CreatedOn:
        name: "CreatedOn"  
        isIgnored: true        
        isCreationDate: true    
    groups:
      histology:
        items: [
          entity_1
          entity_2
          entity_3
        ]

        options:
          option_1: value_1
  hist:
    name: hist
    description: This is a short description about this source
    connectionString: Data Source=patest01;Password=%**PWD_PATOLAB**%;User name=Test
    schema: dbo
    type: mssql
    mapping: []
    code:
      connection: CreateForHistology()
  api:
    name: api
    description: this is a source that uses a graphql connection
    connectionString: "https://localhost:5000/graphql"
    type: graphql
    options:
      option_1: value_1
      option_2: value_2
  sys:
    name: sys
    description: setup for user defined input, based on the table => column model
    connectionString: ./models/* 
    type: file.yaml

## this section specifies how to generate code for this project
code:

  omitSourcePrefix: true
  
  # can also be set globally 
  global:
    variablePrefix: "_"
    variablePostfix: ""

  inject:
    user:
      name: IUserContext
      language: cs
      propertyName: user            
      imports: 
        - "using PatoLab.BlaBla"      
    connectionFactory:
      language: cs
      propertyName: connectionFactory
      name: IConnectionFactory      
    logging:
      name: ILogger<{{ .Name }}>
      language: cs      
      propertyName: logger
      imports: 
        - "using Microsoft.Logging"
      

  keys:
    model: 
      postfix: ModelHelper
      namespace: MyProject.Core.Modeling
      imports: 
        - MyProject.Core.Models
          
    interface:   
      postfix: Repository
      namespace: MyProject.Core.Modeling
      prefix: I
      imports: 
        - "MyProject.Core.Models"
      
    
  exportLocations:
    models: "./en/plass/bak/d..."
    interface: "path"
## this section lets you provide 
options:
  option_1: value_1

# repository:   
    #   inject:
    #     - user
    #     - connectionFactory
    #     - logging
    #   postfix: Repository
    # resover:   
    #   inject:
    #     - user
    #     - connectionFactory
    #     - logging
    #   postfix: Resolver           
    # service:
    #   postfix: "Service"
  
header: |
  Text to place on the top of the file. This will create a template block, called fileheader-block.
  Inside it's possible to use go template syntax
  e.g Customer: {{ .Project.CustomerName }} and {{ .Developer.Name }}, {{ .Developer.Email }}

  This file connects to {{ .Source.Name }} to retrive data from {{ .Name }}