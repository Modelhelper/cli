{
    "openapi": "3.0.1",
    "info": {
      "title": "Stages Flight API",
      "version": "0.1"
    },
    "paths": {
      "/api/v0.1/Account": {
        "post": {
          "tags": [
            "Account"
          ],
          "summary": "Create anonymous user.",
          "operationId": "Account_CreateAnonymousUser",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAnonymousUserModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAnonymousUserModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAnonymousUserModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAnonymousUserModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedAnonymousUserModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedAnonymousUserModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedAnonymousUserModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Account/locations": {
        "get": {
          "tags": [
            "Account"
          ],
          "summary": "Get locations.",
          "operationId": "Account_GetLocations",
          "parameters": [
            {
              "name": "query",
              "in": "query",
              "description": "Search query by name.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pageNumber",
              "in": "query",
              "description": "Number of the page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Items count per page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 50
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/GetLocationsItemModelPagedResult"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetLocationsItemModelPagedResult"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetLocationsItemModelPagedResult"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Account/confirm": {
        "put": {
          "tags": [
            "Account"
          ],
          "summary": "Confirm user.",
          "operationId": "Account_ConfirmUser",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmUserModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmUserModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmUserModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmUserModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Account/confirm-email": {
        "post": {
          "tags": [
            "Account"
          ],
          "summary": "Confirm user email.",
          "operationId": "Account_ConfirmUserEmail",
          "parameters": [
            {
              "name": "token",
              "in": "query",
              "description": "Token that contains anonymous user data.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Account/confirm-email/send": {
        "post": {
          "tags": [
            "Account"
          ],
          "summary": "Send confirmation email to user.",
          "operationId": "Account_SendConfirmationEmail",
          "parameters": [
            {
              "name": "token",
              "in": "query",
              "description": "Token that contains anonymous user data.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/SendConfirmationEmailResultModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SendConfirmationEmailResultModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SendConfirmationEmailResultModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Account/anonymous-info": {
        "get": {
          "tags": [
            "Account"
          ],
          "summary": "Get anonymous user info.",
          "operationId": "Account_GetAnonymousUserInfo",
          "parameters": [
            {
              "name": "token",
              "in": "query",
              "description": "Token that contains anonymous user data.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousUserInfoModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousUserInfoModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousUserInfoModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Account/browser-analytics": {
        "put": {
          "tags": [
            "Account"
          ],
          "summary": "Update user property AllowBrowserAnaltics.",
          "operationId": "Account_UpdateBrowserAnalytics",
          "parameters": [
            {
              "name": "allowBrowserAnalytics",
              "in": "query",
              "description": "allowBrowserAnalytics property value.",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Account/anonymous-token": {
        "get": {
          "tags": [
            "Account"
          ],
          "summary": "Get anonymous token.",
          "operationId": "Account_GetAnonymousToken",
          "parameters": [
            {
              "name": "email",
              "in": "query",
              "description": "User email.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "password",
              "in": "query",
              "description": "User password.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousTokenModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousTokenModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AnonymousTokenModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/ApiClients": {
        "post": {
          "tags": [
            "ApiClients"
          ],
          "summary": "Create.",
          "description": "Creates a new API client.",
          "operationId": "ApiClients_Create",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateApiClientModel"
                },
                "example": {"clientName":"My test client","requireConsent":false,"allowAccessTokensViaBrowser":true,"allowOfflineAccess":false,"alwaysSendClientClaims":true,"alwaysIncludeUserClaimsInIdToken":false,"accessTokenLifetime":3000,"identityTokenLifetime":3600,"redirectUris":["http://mysite.com/redirect-uri"],"postLogoutRedirectUris":["http://mysite.com/post-logout-redirect-uri"],"allowedCorsOrigins":["http://mysite.com"],"allowedGrantTypes":["implicit","client_credentials"],"allowedScopes":["stages-web"],"claims":[{"type":"booking.all","value":"1"},{"type":"booking.all","value":"2"},{"type":"locations.all","value":"1"},{"type":"locations.all","value":"2"},{"type":"locations","value":"1"},{"type":"locations","value":"2"},{"type":"roles","value":"1"},{"type":"sessions.all","value":"1"},{"type":"sessions.all","value":"2"},{"type":"users.all","value":"1"},{"type":"users.all","value":"2"},{"type":"users","value":"1"},{"type":"users","value":"2"},{"type":"workouts.all","value":"1"},{"type":"workouts.location","value":"1"}]}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateApiClientModel"
                },
                "example": {"clientName":"My test client","requireConsent":false,"allowAccessTokensViaBrowser":true,"allowOfflineAccess":false,"alwaysSendClientClaims":true,"alwaysIncludeUserClaimsInIdToken":false,"accessTokenLifetime":3000,"identityTokenLifetime":3600,"redirectUris":["http://mysite.com/redirect-uri"],"postLogoutRedirectUris":["http://mysite.com/post-logout-redirect-uri"],"allowedCorsOrigins":["http://mysite.com"],"allowedGrantTypes":["implicit","client_credentials"],"allowedScopes":["stages-web"],"claims":[{"type":"booking.all","value":"1"},{"type":"booking.all","value":"2"},{"type":"locations.all","value":"1"},{"type":"locations.all","value":"2"},{"type":"locations","value":"1"},{"type":"locations","value":"2"},{"type":"roles","value":"1"},{"type":"sessions.all","value":"1"},{"type":"sessions.all","value":"2"},{"type":"users.all","value":"1"},{"type":"users.all","value":"2"},{"type":"users","value":"1"},{"type":"users","value":"2"},{"type":"workouts.all","value":"1"},{"type":"workouts.location","value":"1"}]}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateApiClientModel"
                },
                "example": {"clientName":"My test client","requireConsent":false,"allowAccessTokensViaBrowser":true,"allowOfflineAccess":false,"alwaysSendClientClaims":true,"alwaysIncludeUserClaimsInIdToken":false,"accessTokenLifetime":3000,"identityTokenLifetime":3600,"redirectUris":["http://mysite.com/redirect-uri"],"postLogoutRedirectUris":["http://mysite.com/post-logout-redirect-uri"],"allowedCorsOrigins":["http://mysite.com"],"allowedGrantTypes":["implicit","client_credentials"],"allowedScopes":["stages-web"],"claims":[{"type":"booking.all","value":"1"},{"type":"booking.all","value":"2"},{"type":"locations.all","value":"1"},{"type":"locations.all","value":"2"},{"type":"locations","value":"1"},{"type":"locations","value":"2"},{"type":"roles","value":"1"},{"type":"sessions.all","value":"1"},{"type":"sessions.all","value":"2"},{"type":"users.all","value":"1"},{"type":"users.all","value":"2"},{"type":"users","value":"1"},{"type":"users","value":"2"},{"type":"workouts.all","value":"1"},{"type":"workouts.location","value":"1"}]}
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateApiClientModel"
                },
                "example": {"clientName":"My test client","requireConsent":false,"allowAccessTokensViaBrowser":true,"allowOfflineAccess":false,"alwaysSendClientClaims":true,"alwaysIncludeUserClaimsInIdToken":false,"accessTokenLifetime":3000,"identityTokenLifetime":3600,"redirectUris":["http://mysite.com/redirect-uri"],"postLogoutRedirectUris":["http://mysite.com/post-logout-redirect-uri"],"allowedCorsOrigins":["http://mysite.com"],"allowedGrantTypes":["implicit","client_credentials"],"allowedScopes":["stages-web"],"claims":[{"type":"booking.all","value":"1"},{"type":"booking.all","value":"2"},{"type":"locations.all","value":"1"},{"type":"locations.all","value":"2"},{"type":"locations","value":"1"},{"type":"locations","value":"2"},{"type":"roles","value":"1"},{"type":"sessions.all","value":"1"},{"type":"sessions.all","value":"2"},{"type":"users.all","value":"1"},{"type":"users.all","value":"2"},{"type":"users","value":"1"},{"type":"users","value":"2"},{"type":"workouts.all","value":"1"},{"type":"workouts.location","value":"1"}]}
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedApiClientModel"
                  },
                  "example": {"id":2048,"clientId":"f4d2decd31ba4c6c851d38c5f9485a65mytestclient","clientSecret":"xXXXXxXXXXXXXXxXXxXXXxxxXxXxXXxxxXXXXxXXXXxx","clientName":"My test client","requireConsent":false,"allowAccessTokensViaBrowser":true,"allowOfflineAccess":false,"alwaysSendClientClaims":true,"alwaysIncludeUserClaimsInIdToken":false,"accessTokenLifetime":3000,"identityTokenLifetime":3600,"redirectUris":["http://mysite.com/redirect-uri"],"postLogoutRedirectUris":["http://mysite.com/post-logout-redirect-uri"],"allowedCorsOrigins":["http://mysite.com"],"allowedGrantTypes":["implicit","client-credentials"],"allowedScopes":["stages-web"],"claims":[{"type":"users.all","value":"2"},{"type":"locations","value":"1"}]}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedApiClientModel"
                  },
                  "example": {"id":2048,"clientId":"f4d2decd31ba4c6c851d38c5f9485a65mytestclient","clientSecret":"xXXXXxXXXXXXXXxXXxXXXxxxXxXxXXxxxXXXXxXXXXxx","clientName":"My test client","requireConsent":false,"allowAccessTokensViaBrowser":true,"allowOfflineAccess":false,"alwaysSendClientClaims":true,"alwaysIncludeUserClaimsInIdToken":false,"accessTokenLifetime":3000,"identityTokenLifetime":3600,"redirectUris":["http://mysite.com/redirect-uri"],"postLogoutRedirectUris":["http://mysite.com/post-logout-redirect-uri"],"allowedCorsOrigins":["http://mysite.com"],"allowedGrantTypes":["implicit","client-credentials"],"allowedScopes":["stages-web"],"claims":[{"type":"users.all","value":"2"},{"type":"locations","value":"1"}]}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedApiClientModel"
                  },
                  "example": {"id":2048,"clientId":"f4d2decd31ba4c6c851d38c5f9485a65mytestclient","clientSecret":"xXXXXxXXXXXXXXxXXxXXXxxxXxXxXXxxxXXXXxXXXXxx","clientName":"My test client","requireConsent":false,"allowAccessTokensViaBrowser":true,"allowOfflineAccess":false,"alwaysSendClientClaims":true,"alwaysIncludeUserClaimsInIdToken":false,"accessTokenLifetime":3000,"identityTokenLifetime":3600,"redirectUris":["http://mysite.com/redirect-uri"],"postLogoutRedirectUris":["http://mysite.com/post-logout-redirect-uri"],"allowedCorsOrigins":["http://mysite.com"],"allowedGrantTypes":["implicit","client-credentials"],"allowedScopes":["stages-web"],"claims":[{"type":"users.all","value":"2"},{"type":"locations","value":"1"}]}
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/api/v0.1/ApiClients/{id}": {
        "put": {
          "tags": [
            "ApiClients"
          ],
          "summary": "Update by ID.",
          "description": "Updates an existing API client, using it's ID.",
          "operationId": "ApiClients_Update",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateApiClientModel"
                },
                "example": {"clientName":"My test client","requireConsent":false,"allowAccessTokensViaBrowser":true,"allowOfflineAccess":false,"alwaysSendClientClaims":true,"alwaysIncludeUserClaimsInIdToken":false,"accessTokenLifetime":3000,"identityTokenLifetime":3600,"redirectUris":["http://mysite.com/redirect-uri"],"postLogoutRedirectUris":["http://mysite.com/post-logout-redirect-uri"],"allowedCorsOrigins":["http://mysite.com"],"allowedGrantTypes":["implicit","client-credentials"],"allowedScopes":["stages-web"],"claims":[{"type":"users.all","value":"2"},{"type":"locations","value":"1"}]}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateApiClientModel"
                },
                "example": {"clientName":"My test client","requireConsent":false,"allowAccessTokensViaBrowser":true,"allowOfflineAccess":false,"alwaysSendClientClaims":true,"alwaysIncludeUserClaimsInIdToken":false,"accessTokenLifetime":3000,"identityTokenLifetime":3600,"redirectUris":["http://mysite.com/redirect-uri"],"postLogoutRedirectUris":["http://mysite.com/post-logout-redirect-uri"],"allowedCorsOrigins":["http://mysite.com"],"allowedGrantTypes":["implicit","client-credentials"],"allowedScopes":["stages-web"],"claims":[{"type":"users.all","value":"2"},{"type":"locations","value":"1"}]}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateApiClientModel"
                },
                "example": {"clientName":"My test client","requireConsent":false,"allowAccessTokensViaBrowser":true,"allowOfflineAccess":false,"alwaysSendClientClaims":true,"alwaysIncludeUserClaimsInIdToken":false,"accessTokenLifetime":3000,"identityTokenLifetime":3600,"redirectUris":["http://mysite.com/redirect-uri"],"postLogoutRedirectUris":["http://mysite.com/post-logout-redirect-uri"],"allowedCorsOrigins":["http://mysite.com"],"allowedGrantTypes":["implicit","client-credentials"],"allowedScopes":["stages-web"],"claims":[{"type":"users.all","value":"2"},{"type":"locations","value":"1"}]}
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateApiClientModel"
                },
                "example": {"clientName":"My test client","requireConsent":false,"allowAccessTokensViaBrowser":true,"allowOfflineAccess":false,"alwaysSendClientClaims":true,"alwaysIncludeUserClaimsInIdToken":false,"accessTokenLifetime":3000,"identityTokenLifetime":3600,"redirectUris":["http://mysite.com/redirect-uri"],"postLogoutRedirectUris":["http://mysite.com/post-logout-redirect-uri"],"allowedCorsOrigins":["http://mysite.com"],"allowedGrantTypes":["implicit","client-credentials"],"allowedScopes":["stages-web"],"claims":[{"type":"users.all","value":"2"},{"type":"locations","value":"1"}]}
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedApiClientModel"
                  },
                  "example": {"id":2048,"clientId":"f4d2decd31ba4c6c851d38c5f9485a65mytestclient","clientName":"My test client","requireConsent":false,"allowAccessTokensViaBrowser":true,"allowOfflineAccess":false,"alwaysSendClientClaims":true,"alwaysIncludeUserClaimsInIdToken":false,"accessTokenLifetime":3000,"identityTokenLifetime":3600,"redirectUris":["http://mysite.com/redirect-uri"],"postLogoutRedirectUris":["http://mysite.com/post-logout-redirect-uri"],"allowedCorsOrigins":["http://mysite.com"],"allowedGrantTypes":["implicit","client-credentials"],"allowedScopes":["stages-web"],"claims":[{"type":"users.all","value":"2"},{"type":"locations","value":"1"}]}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedApiClientModel"
                  },
                  "example": {"id":2048,"clientId":"f4d2decd31ba4c6c851d38c5f9485a65mytestclient","clientName":"My test client","requireConsent":false,"allowAccessTokensViaBrowser":true,"allowOfflineAccess":false,"alwaysSendClientClaims":true,"alwaysIncludeUserClaimsInIdToken":false,"accessTokenLifetime":3000,"identityTokenLifetime":3600,"redirectUris":["http://mysite.com/redirect-uri"],"postLogoutRedirectUris":["http://mysite.com/post-logout-redirect-uri"],"allowedCorsOrigins":["http://mysite.com"],"allowedGrantTypes":["implicit","client-credentials"],"allowedScopes":["stages-web"],"claims":[{"type":"users.all","value":"2"},{"type":"locations","value":"1"}]}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedApiClientModel"
                  },
                  "example": {"id":2048,"clientId":"f4d2decd31ba4c6c851d38c5f9485a65mytestclient","clientName":"My test client","requireConsent":false,"allowAccessTokensViaBrowser":true,"allowOfflineAccess":false,"alwaysSendClientClaims":true,"alwaysIncludeUserClaimsInIdToken":false,"accessTokenLifetime":3000,"identityTokenLifetime":3600,"redirectUris":["http://mysite.com/redirect-uri"],"postLogoutRedirectUris":["http://mysite.com/post-logout-redirect-uri"],"allowedCorsOrigins":["http://mysite.com"],"allowedGrantTypes":["implicit","client-credentials"],"allowedScopes":["stages-web"],"claims":[{"type":"users.all","value":"2"},{"type":"locations","value":"1"}]}
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error"
            }
          }
        },
        "delete": {
          "tags": [
            "ApiClients"
          ],
          "summary": "Delete by ID.",
          "description": "Deletes an existing API client, using it's ID.",
          "operationId": "ApiClients_Delete",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/api/v0.1/Bikes/{id}": {
        "get": {
          "tags": [
            "Bikes"
          ],
          "operationId": "Bikes_Get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/GetBikeDetailsModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetBikeDetailsModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetBikeDetailsModel"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Bikes"
          ],
          "operationId": "Bikes_Delete",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Bikes": {
        "post": {
          "tags": [
            "Bikes"
          ],
          "operationId": "Bikes_Create",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBikeModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBikeModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBikeModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBikeModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedBikeModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedBikeModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedBikeModel"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Bikes"
          ],
          "operationId": "Bikes_Update",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBikeModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBikeModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBikeModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBikeModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedBikeModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedBikeModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedBikeModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Bikes/deleterange": {
        "post": {
          "tags": [
            "Bikes"
          ],
          "operationId": "Bikes_DeleteRange",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Bikes/updaterange/{roomId}": {
        "put": {
          "tags": [
            "Bikes"
          ],
          "operationId": "Bikes_UpdateRange",
          "parameters": [
            {
              "name": "roomId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBikesRangeModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBikesRangeModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBikesRangeModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBikesRangeModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UpdatedBikesRangeItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UpdatedBikesRangeItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UpdatedBikesRangeItemModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Bookings": {
        "get": {
          "tags": [
            "Bookings"
          ],
          "operationId": "Bookings_GetAll",
          "parameters": [
            {
              "name": "sessionId",
              "in": "query",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/BookingItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/BookingItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/BookingItemModel"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Bookings"
          ],
          "operationId": "Bookings_Create",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBookingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBookingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBookingModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBookingModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedBookingModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedBookingModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedBookingModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Bookings/{id}": {
        "get": {
          "tags": [
            "Bookings"
          ],
          "operationId": "Bookings_Get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/BookingDetailsModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BookingDetailsModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BookingDetailsModel"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Bookings"
          ],
          "operationId": "Bookings_Update",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBookingModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBookingModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBookingModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBookingModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedBookingModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedBookingModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedBookingModel"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Bookings"
          ],
          "operationId": "Bookings_Delete",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/ClassModes": {
        "get": {
          "tags": [
            "ClassModes"
          ],
          "operationId": "ClassModes_Get",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ClassModeItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ClassModeItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ClassModeItemModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/ClassTypes": {
        "get": {
          "tags": [
            "ClassTypes"
          ],
          "operationId": "ClassTypes_Get",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ClassTypeItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ClassTypeItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ClassTypeItemModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Competitions": {
        "post": {
          "tags": [
            "Competitions"
          ],
          "summary": "Create competition.",
          "operationId": "Competitions_Create",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCompetitionModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCompetitionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCompetitionModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCompetitionModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedCompetitionModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedCompetitionModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedCompetitionModel"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "Competitions"
          ],
          "summary": "Get competitions.",
          "operationId": "Competitions_GetAll",
          "parameters": [
            {
              "name": "query",
              "in": "query",
              "description": "Search query.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortType",
              "in": "query",
              "description": "Competitions sort type. Optional, default to CompetitionsSortType.DateCreatedDesc.",
              "schema": {
                "$ref": "#/components/schemas/CompetitionsSortType"
              }
            },
            {
              "name": "pageNumber",
              "in": "query",
              "description": "Number of the page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Items count per page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 50
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCompetitionsItemModelPagedResult"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCompetitionsItemModelPagedResult"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCompetitionsItemModelPagedResult"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Competitions/{id}": {
        "put": {
          "tags": [
            "Competitions"
          ],
          "summary": "Update competition.",
          "operationId": "Competitions_Update",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCompetitionModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCompetitionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCompetitionModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCompetitionModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedCompetitionModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedCompetitionModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedCompetitionModel"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "Competitions"
          ],
          "summary": "Get competition details.",
          "operationId": "Competitions_Get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target Competition.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCompetitionModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCompetitionModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCompetitionModel"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Competitions"
          ],
          "summary": "Delete competition by id.",
          "operationId": "Competitions_Delete",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target Competition.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Countries": {
        "get": {
          "tags": [
            "Countries"
          ],
          "operationId": "Countries_GetAll",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CountryItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CountryItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CountryItemModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Enterprises": {
        "get": {
          "tags": [
            "Enterprises"
          ],
          "summary": "Get enterprises that user has access to.",
          "operationId": "Enterprises_GetAll",
          "parameters": [
            {
              "name": "query",
              "in": "query",
              "description": "Search query by name.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pageNumber",
              "in": "query",
              "description": "Number of the page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Items count per page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 50
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/EnterpriseItemModelPagedResult"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EnterpriseItemModelPagedResult"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EnterpriseItemModelPagedResult"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Enterprises"
          ],
          "operationId": "Enterprises_Create",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEnterpriseModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEnterpriseModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEnterpriseModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEnterpriseModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedEnterpriseModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedEnterpriseModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedEnterpriseModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Enterprises/{id}": {
        "get": {
          "tags": [
            "Enterprises"
          ],
          "operationId": "Enterprises_Get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/EnterpriseDetailsModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EnterpriseDetailsModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EnterpriseDetailsModel"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Enterprises"
          ],
          "operationId": "Enterprises_Update",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateEnterpriseModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateEnterpriseModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateEnterpriseModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateEnterpriseModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedEnterpriseModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedEnterpriseModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedEnterpriseModel"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Enterprises"
          ],
          "operationId": "Enterprises_Delete",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Enterprises/{id}/configuration": {
        "get": {
          "tags": [
            "Enterprises"
          ],
          "summary": "Get configuration of the enterprise.",
          "operationId": "Enterprises_GetEnterpriseConfiguration",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target Enterprise.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/GetEnterpriseConfigurationModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetEnterpriseConfigurationModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetEnterpriseConfigurationModel"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Enterprises"
          ],
          "summary": "Update configuration of the enterprise.",
          "operationId": "Enterprises_UpdateEnterpriseConfiguration",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target Enterprise.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "description": "Update enterprise configuration model.",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateEnterpriseConfigurationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateEnterpriseConfigurationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateEnterpriseConfigurationModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateEnterpriseConfigurationModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedEnterpriseModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedEnterpriseModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedEnterpriseModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Experiences": {
        "get": {
          "tags": [
            "Experiences"
          ],
          "summary": "Get experiences.",
          "operationId": "Experiences_GetExperiences",
          "parameters": [
            {
              "name": "query",
              "in": "query",
              "description": "Search query.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortType",
              "in": "query",
              "description": "Experiences sort type. Optional, default to ExperiencesSortType.DateCreatedDesc.",
              "schema": {
                "$ref": "#/components/schemas/ExperiencesSortType"
              }
            },
            {
              "name": "pageNumber",
              "in": "query",
              "description": "Page Number.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Page Size.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 50
              }
            },
            {
              "name": "isOnDemand",
              "in": "query",
              "description": "Available on demand. Leave “False” to get all Experiences or select “True” to get only available On Demand Experiences.",
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "fromDuration",
              "in": "query",
              "description": "From duration. Optional.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "toDuration",
              "in": "query",
              "description": "To duration. Optional.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "userId",
              "in": "query",
              "description": "If of target user. Work in pair with isUsed. Optional.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "isUsedInWorkout",
              "in": "query",
              "description": "\"True\" to get experiences which were taken by the specified user, \"False\" to get experiences which were never taken by the specified user. Optional.",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "hasInstructor",
              "in": "query",
              "description": "\"True\" to get experiences which have instructors assigned, \"False\" to get experiences which have not instructors assigned. Optional.",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "isRecommended",
              "in": "query",
              "description": "\"True\" to get experiences which are recommended, \"False\" to get all experiences. Optional.",
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "experienceIds",
              "in": "query",
              "description": "List of experience ids.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "instructorIds",
              "in": "query",
              "description": "List of instructor ids.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "enterpriseIds",
              "in": "query",
              "description": "List of enterprise ids.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "tagIds",
              "in": "query",
              "description": "List of tag ids.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ExperienceItemModelPagedResult"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExperienceItemModelPagedResult"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExperienceItemModelPagedResult"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Experiences"
          ],
          "summary": "Create experience.",
          "operationId": "Experiences_Create",
          "requestBody": {
            "description": "Create Experience Model.",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateExperienceModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateExperienceModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateExperienceModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateExperienceModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedExperienceModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedExperienceModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedExperienceModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Experiences/count": {
        "get": {
          "tags": [
            "Experiences"
          ],
          "summary": "Get number of experiences.",
          "operationId": "Experiences_GetExperiencesCount",
          "parameters": [
            {
              "name": "query",
              "in": "query",
              "description": "Search query.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOnDemand",
              "in": "query",
              "description": "Available on demand. Leave “False” to get all Experiences or select “True” to get only available On Demand Experiences.",
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "fromDuration",
              "in": "query",
              "description": "From duration. Optional.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "toDuration",
              "in": "query",
              "description": "To duration. Optional.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "userId",
              "in": "query",
              "description": "If of target user. Work in pair with isUsed. Optional.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "isUsedInWorkout",
              "in": "query",
              "description": "\"True\" to get experiences which were taken by the specified user, \"False\" to get experiences which were never taken by the specified user. Optional.",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "hasInstructor",
              "in": "query",
              "description": "\"True\" to get experiences which have instructors assigned, \"False\" to get experiences which have not instructors assigned. Optional.",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "experienceIds",
              "in": "query",
              "description": "List of experience ids.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "instructorIds",
              "in": "query",
              "description": "List of instructor ids.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "enterpriseIds",
              "in": "query",
              "description": "List of enterprise ids.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "tagIds",
              "in": "query",
              "description": "List of tag ids.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Experiences/{id}": {
        "get": {
          "tags": [
            "Experiences"
          ],
          "summary": "Get experience details.",
          "operationId": "Experiences_GetExperienceDetails",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Experience Id.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ExperienceDetailsModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExperienceDetailsModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExperienceDetailsModel"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Experiences"
          ],
          "summary": "Update experience.",
          "operationId": "Experiences_Update",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Experience Id.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "description": "Update Experience Model.",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateExperienceModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateExperienceModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateExperienceModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateExperienceModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedExperienceModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedExperienceModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedExperienceModel"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Experiences"
          ],
          "summary": "Delete experience.",
          "operationId": "Experiences_DeleteExperience",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of experience.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Experiences/{id}/image": {
        "put": {
          "tags": [
            "Experiences"
          ],
          "summary": "Update experience image.",
          "operationId": "Experiences_UpdateImage",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of experience.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Image": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                },
                "encoding": {
                  "Image": {
                    "style": "form"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedExperienceImageModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedExperienceImageModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedExperienceImageModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/ExperienceTypes": {
        "get": {
          "tags": [
            "ExperienceTypes"
          ],
          "summary": "Get experience types.",
          "operationId": "ExperienceTypes_Get",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ExperienceTypeItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ExperienceTypeItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ExperienceTypeItemModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Genders": {
        "get": {
          "tags": [
            "Genders"
          ],
          "operationId": "Genders_Get",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GenderItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GenderItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GenderItemModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Leaderboards": {
        "get": {
          "tags": [
            "Leaderboards"
          ],
          "summary": "Get leaderboard.",
          "operationId": "Leaderboards_Get",
          "parameters": [
            {
              "name": "type",
              "in": "query",
              "description": "Leaderboard type.",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/LeaderboardType"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "Start date.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "End date.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "locationId",
              "in": "query",
              "description": "Id of user location to filter by.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "enterpriseId",
              "in": "query",
              "description": "Id of user enterprise to filter by.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "genderId",
              "in": "query",
              "description": "Id of user gender to filter by.",
              "schema": {
                "$ref": "#/components/schemas/GenderId"
              }
            },
            {
              "name": "countryId",
              "in": "query",
              "description": "Id of user country to filter by.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LeaderboardItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LeaderboardItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LeaderboardItemModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Leaderboards/default": {
        "get": {
          "tags": [
            "Leaderboards"
          ],
          "summary": "Get default leaderboards.",
          "operationId": "Leaderboards_GetDefault",
          "parameters": [
            {
              "name": "startDate",
              "in": "query",
              "description": "Start date.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "End date.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "locationId",
              "in": "query",
              "description": "Id of user location to filter by.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "enterpriseId",
              "in": "query",
              "description": "Id of user enterprise to filter by.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "genderId",
              "in": "query",
              "description": "Id of user gender to filter by.",
              "schema": {
                "$ref": "#/components/schemas/GenderId"
              }
            },
            {
              "name": "countryId",
              "in": "query",
              "description": "Id of user country to filter by.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LeaderboardItemModelLeaderboardModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LeaderboardItemModelLeaderboardModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LeaderboardItemModelLeaderboardModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Live/HlsUrl/{streamId}": {
        "get": {
          "tags": [
            "Live"
          ],
          "operationId": "Live_GetHlsUrl",
          "parameters": [
            {
              "name": "streamId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Locations": {
        "get": {
          "tags": [
            "Locations"
          ],
          "operationId": "Locations_GetAll",
          "parameters": [
            {
              "name": "pageNumber",
              "in": "query",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 50
              }
            },
            {
              "name": "query",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/LocationItemModelPagedResult"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LocationItemModelPagedResult"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LocationItemModelPagedResult"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Locations"
          ],
          "operationId": "Locations_Create",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLocationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLocationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLocationModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLocationModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedLocationModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedLocationModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedLocationModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Locations/name": {
        "get": {
          "tags": [
            "Locations"
          ],
          "summary": "Get simple info of locations.",
          "operationId": "Locations_GetLocationsInfo",
          "parameters": [
            {
              "name": "type",
              "in": "query",
              "description": "Access scope type.",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/AccessScopeType"
              }
            },
            {
              "name": "query",
              "in": "query",
              "description": "Search query.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pageNumber",
              "in": "query",
              "description": "Number of the page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Items count per page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 50
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/LocationInfoItemModelPagedResult"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LocationInfoItemModelPagedResult"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LocationInfoItemModelPagedResult"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Locations/{id}": {
        "get": {
          "tags": [
            "Locations"
          ],
          "operationId": "Locations_Get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/LocationDetailsModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LocationDetailsModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LocationDetailsModel"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Locations"
          ],
          "operationId": "Locations_Update",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateLocationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateLocationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateLocationModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateLocationModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedLocationModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedLocationModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedLocationModel"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Locations"
          ],
          "operationId": "Locations_Delete",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Locations/{id}/rooms": {
        "get": {
          "tags": [
            "Locations"
          ],
          "operationId": "Locations_GetRooms",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Locations/{id}/leaderboards": {
        "get": {
          "tags": [
            "Locations"
          ],
          "summary": "Get leaderboards configurations of location.",
          "operationId": "Locations_GetLeaderboardsConfigurations",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target Location.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "types",
              "in": "query",
              "description": "Selected leaderboard configuration types.",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LeaderboardsConfigurationType"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GetLeaderboardsConfigurationModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GetLeaderboardsConfigurationModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GetLeaderboardsConfigurationModel"
                    }
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Locations"
          ],
          "operationId": "Locations_UpdateLeaderboardsConfiguration",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateLeaderboardsConfigurationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateLeaderboardsConfigurationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateLeaderboardsConfigurationModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateLeaderboardsConfigurationModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedLeaderboardsConfigurationModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedLeaderboardsConfigurationModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedLeaderboardsConfigurationModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Locations/{id}/webhooks": {
        "get": {
          "tags": [
            "Locations"
          ],
          "summary": "Get webhooks of location.",
          "operationId": "Locations_GetWebhooks",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target Location.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "pageNumber",
              "in": "query",
              "description": "Number of the page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Items count per page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 50
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/GetLocationWebhookItemModelPagedResult"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetLocationWebhookItemModelPagedResult"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetLocationWebhookItemModelPagedResult"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Locations"
          ],
          "summary": "Create location webhook.",
          "operationId": "Locations_CreateWebhook",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target Location.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "description": "Create webhook model.",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLocationWebhookModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLocationWebhookModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLocationWebhookModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLocationWebhookModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedLocationWebhookModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedLocationWebhookModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedLocationWebhookModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Locations/{id}/webhooks/{webhookId}": {
        "get": {
          "tags": [
            "Locations"
          ],
          "summary": "Get webhook details by id.",
          "operationId": "Locations_GetWebhookDetails",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target Location.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "webhookId",
              "in": "path",
              "description": "Id of target Location webhook.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/GetLocationWebhookDetailsModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetLocationWebhookDetailsModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetLocationWebhookDetailsModel"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Locations"
          ],
          "summary": "Update location webhook.",
          "operationId": "Locations_UpdateWebhook",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target Location.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "webhookId",
              "in": "path",
              "description": "Id of target Location webhook.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "description": "Update webhook model.",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateLocationWebhookModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateLocationWebhookModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateLocationWebhookModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateLocationWebhookModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedLocationWebhookModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedLocationWebhookModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedLocationWebhookModel"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Locations"
          ],
          "summary": "Delete webhook of location.",
          "operationId": "Locations_DeleteWebhook",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "webhookId",
              "in": "path",
              "description": "Id of target Location webhook.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Locations/{id}/session": {
        "get": {
          "tags": [
            "Locations"
          ],
          "operationId": "Locations_GetRecentSessionInfo",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/GetSessionInfoModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetSessionInfoModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetSessionInfoModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Locations/{id}/enterprise-configuration": {
        "get": {
          "tags": [
            "Locations"
          ],
          "summary": "Get enterprise configuration of the location.",
          "operationId": "Locations_GetEnterpriseConfiguration",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target Location.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/GetLocationEnterpriseConfigurationModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetLocationEnterpriseConfigurationModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetLocationEnterpriseConfigurationModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Plans": {
        "post": {
          "tags": [
            "Plans"
          ],
          "summary": "Create plan.",
          "operationId": "Plans_Create",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlanModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlanModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlanModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlanModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedPlanModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedPlanModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedPlanModel"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "Plans"
          ],
          "summary": "Get user`s plans.",
          "operationId": "Plans_GetAll",
          "parameters": [
            {
              "name": "query",
              "in": "query",
              "description": "Search query.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortType",
              "in": "query",
              "description": "Plans sort type. Optional, default to PlansSortType.DateCreatedDesc.",
              "schema": {
                "$ref": "#/components/schemas/PlansSortType"
              }
            },
            {
              "name": "plansType",
              "in": "query",
              "description": "Plan type.",
              "schema": {
                "$ref": "#/components/schemas/PlansType"
              }
            },
            {
              "name": "roomId",
              "in": "query",
              "description": "Id of target room. Required for PlansType.Location.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "userId",
              "in": "query",
              "description": "Id of target user. Required for PlansType.Instructor, default to current user id.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "pageNumber",
              "in": "query",
              "description": "Number of the page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Items count per page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 50
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/GetPlansItemModelPagedResult"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetPlansItemModelPagedResult"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetPlansItemModelPagedResult"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Plans/{id}": {
        "get": {
          "tags": [
            "Plans"
          ],
          "summary": "Get plan details.",
          "operationId": "Plans_Get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target Plan.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/GetPlanModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetPlanModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetPlanModel"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Plans"
          ],
          "summary": "Update plan.",
          "operationId": "Plans_Update",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlanModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlanModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlanModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlanModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedPlanModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedPlanModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedPlanModel"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Plans"
          ],
          "summary": "Delete plan by id.",
          "operationId": "Plans_Delete",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target Plan.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Plans/{id}/xml": {
        "get": {
          "tags": [
            "Plans"
          ],
          "summary": "Get plan`s xml.",
          "operationId": "Plans_GetXml",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target plan.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Plans/{id}/fit": {
        "get": {
          "tags": [
            "Plans"
          ],
          "summary": "Get plan`s fit.",
          "operationId": "Plans_GetFit",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target plan.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Plans/v1": {
        "get": {
          "tags": [
            "Plans"
          ],
          "summary": "Get v1 plans.",
          "operationId": "Plans_GetAllV1",
          "parameters": [
            {
              "name": "query",
              "in": "query",
              "description": "Search query.",
              "schema": {
                "type": "string",
                "default": ""
              }
            },
            {
              "name": "roomId",
              "in": "query",
              "description": "Id of target room. Required for PlansType.Location.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "userId",
              "in": "query",
              "description": "Id of target user. Required for PlansType.Instructor.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "plansType",
              "in": "query",
              "description": "Plan type.",
              "schema": {
                "$ref": "#/components/schemas/PlansType"
              }
            },
            {
              "name": "pageNumber",
              "in": "query",
              "description": "Number of the page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Items count per page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 50
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/GetV1PlanItemModelPagedResult"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetV1PlanItemModelPagedResult"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetV1PlanItemModelPagedResult"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Plans/v1/{id}/xml": {
        "get": {
          "tags": [
            "Plans"
          ],
          "summary": "Get v1 plan`s xml.",
          "operationId": "Plans_GetV1Xml",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target v1 plan.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/PowerMeterDiagnostic/{roomId}": {
        "get": {
          "tags": [
            "PowerMeterDiagnostic"
          ],
          "operationId": "PowerMeterDiagnostic_GetRoomDiagnostic",
          "parameters": [
            {
              "name": "roomId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/RoomDiagnosticDataModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoomDiagnosticDataModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoomDiagnosticDataModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/PowerMeterDiagnostic/{roomId}/{antId}/{dateSpanMonths}": {
        "get": {
          "tags": [
            "PowerMeterDiagnostic"
          ],
          "operationId": "PowerMeterDiagnostic_GetBikeDiagnostic",
          "parameters": [
            {
              "name": "roomId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "antId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "dateSpanMonths",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 3
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/BikeDiagnosticDataModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BikeDiagnosticDataModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BikeDiagnosticDataModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/RecurrentTypes": {
        "get": {
          "tags": [
            "RecurrentTypes"
          ],
          "operationId": "RecurrentTypes_Get",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RecurrentTypeItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RecurrentTypeItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RecurrentTypeItemModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Regions": {
        "get": {
          "tags": [
            "Regions"
          ],
          "operationId": "Regions_GetAll",
          "parameters": [
            {
              "name": "enterpriseId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "pageNumber",
              "in": "query",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 50
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/RegionItemModelPagedResult"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RegionItemModelPagedResult"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RegionItemModelPagedResult"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Regions"
          ],
          "operationId": "Regions_Create",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRegionModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRegionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRegionModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRegionModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedRegionModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedRegionModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedRegionModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Regions/{id}": {
        "get": {
          "tags": [
            "Regions"
          ],
          "operationId": "Regions_Get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/RegionDetailsModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RegionDetailsModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RegionDetailsModel"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Regions"
          ],
          "operationId": "Regions_Update",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRegionModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRegionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRegionModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRegionModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedRegionModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedRegionModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedRegionModel"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Regions"
          ],
          "operationId": "Regions_Delete",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Roles": {
        "get": {
          "tags": [
            "Roles"
          ],
          "operationId": "Roles_Get",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RoleItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RoleItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RoleItemModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/RoomBattles/{id}": {
        "get": {
          "tags": [
            "RoomBattles"
          ],
          "summary": "Get room battle.",
          "operationId": "RoomBattles_Get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of the room battle to be retrieved.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/GetRoomBattleModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetRoomBattleModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetRoomBattleModel"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "RoomBattles"
          ],
          "summary": "Update room battle.",
          "operationId": "RoomBattles_Update",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of the room battle to be updated",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "description": "Model that contains ids to be added to the battle.",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoomBattleModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoomBattleModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoomBattleModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoomBattleModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedRoomBattleModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedRoomBattleModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedRoomBattleModel"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "RoomBattles"
          ],
          "summary": "Delete room battle.",
          "operationId": "RoomBattles_Delete",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of the room battle to be deleted.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/RoomBattles": {
        "post": {
          "tags": [
            "RoomBattles"
          ],
          "summary": "Create room battle.",
          "operationId": "RoomBattles_Create",
          "requestBody": {
            "description": "Model that contains ids to be added to the battle.",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoomBattleModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoomBattleModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoomBattleModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoomBattleModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedRoomBattleModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedRoomBattleModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedRoomBattleModel"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "RoomBattles"
          ],
          "summary": "Get room battles.",
          "operationId": "RoomBattles_GetAll",
          "parameters": [
            {
              "name": "pageNumber",
              "in": "query",
              "description": "Number of the page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Items count per page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 50
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/RoomBattleItemModelPagedResult"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoomBattleItemModelPagedResult"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoomBattleItemModelPagedResult"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/RoomBattles/{battleId}/history": {
        "get": {
          "tags": [
            "RoomBattles"
          ],
          "summary": "Get room battle history.",
          "operationId": "RoomBattles_GetBattleHistory",
          "parameters": [
            {
              "name": "battleId",
              "in": "path",
              "description": "Id of the room battle.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "pageNumber",
              "in": "query",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 50
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/BattleHistoryItemModelPagedResult"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BattleHistoryItemModelPagedResult"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BattleHistoryItemModelPagedResult"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/RoomBattles/{battleId}/history/recent": {
        "get": {
          "tags": [
            "RoomBattles"
          ],
          "summary": "Get recent room battle history.",
          "operationId": "RoomBattles_GetRecentBattleHistory",
          "parameters": [
            {
              "name": "battleId",
              "in": "path",
              "description": "Id of the room battle.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RecentBattleHistoryItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RecentBattleHistoryItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RecentBattleHistoryItemModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Rooms/{id}": {
        "get": {
          "tags": [
            "Rooms"
          ],
          "operationId": "Rooms_Get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/RoomDetailsModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoomDetailsModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoomDetailsModel"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Rooms"
          ],
          "operationId": "Rooms_Update",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoomModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoomModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoomModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoomModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedRoomModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedRoomModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedRoomModel"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Rooms"
          ],
          "operationId": "Rooms_Delete",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Rooms": {
        "post": {
          "tags": [
            "Rooms"
          ],
          "operationId": "Rooms_Create",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoomModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoomModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoomModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoomModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdateRoomModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdateRoomModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdateRoomModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Rooms/{id}/bookings/nearest/users": {
        "get": {
          "tags": [
            "Rooms"
          ],
          "operationId": "Rooms_GetNearestBookingUsers",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/BookingUsersModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BookingUsersModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BookingUsersModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Rooms/sessions/nearest": {
        "post": {
          "tags": [
            "Rooms"
          ],
          "operationId": "Rooms_GetNearestSessionsByRooms",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/NearestSession"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/NearestSession"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/NearestSession"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Rooms/name": {
        "get": {
          "tags": [
            "Rooms"
          ],
          "summary": "Get simple info of rooms.",
          "operationId": "Rooms_GetRoomsInfo",
          "parameters": [
            {
              "name": "type",
              "in": "query",
              "description": "Access scope type.",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/AccessScopeType"
              }
            },
            {
              "name": "query",
              "in": "query",
              "description": "Search query.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "locationId",
              "in": "query",
              "description": "Id of location.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "pageNumber",
              "in": "query",
              "description": "Number of the page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Items count per page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 50
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/RoomInfoItemModelPagedResult"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoomInfoItemModelPagedResult"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoomInfoItemModelPagedResult"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Rooms/{id}/bikes": {
        "get": {
          "tags": [
            "Rooms"
          ],
          "operationId": "Rooms_GetBikesGrid",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/RoomBikesGridModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoomBikesGridModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoomBikesGridModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Rooms/devices": {
        "get": {
          "tags": [
            "Rooms"
          ],
          "summary": "Get JB devices.",
          "operationId": "Rooms_GetRooms",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GetRoomDevicesModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GetRoomDevicesModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GetRoomDevicesModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Rooms/{id}/stream-credentials": {
        "get": {
          "tags": [
            "Rooms"
          ],
          "summary": "Gets credentials for publishing live stream using RTMP.\r\nThe credentials should be copied and used by for instant OBS when publishing.",
          "operationId": "Rooms_GetStreamCredentials",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "RoomId.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "type",
              "in": "query",
              "description": "Access scope type.",
              "schema": {
                "$ref": "#/components/schemas/AccessScopeType"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/GetRoomStreamCredentialsModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetRoomStreamCredentialsModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetRoomStreamCredentialsModel"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Rooms"
          ],
          "summary": "Generates credentials for publishing live stream using RTMP.\r\nExisting credentials for the room will be overwritten.",
          "operationId": "Rooms_CreateStreamCredentials",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "RoomId.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedRoomStreamCredentialsModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedRoomStreamCredentialsModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedRoomStreamCredentialsModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/room-types": {
        "get": {
          "tags": [
            "RoomTypes"
          ],
          "operationId": "RoomTypes_GetRoomTypes",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RoomTypeItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RoomTypeItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RoomTypeItemModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/rooms/{roomId}/Screens": {
        "get": {
          "tags": [
            "Screens"
          ],
          "operationId": "Screens_GetScreens",
          "parameters": [
            {
              "name": "roomId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ScreenItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ScreenItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ScreenItemModel"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Screens"
          ],
          "operationId": "Screens_CreateScreen",
          "parameters": [
            {
              "name": "roomId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateScreenModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateScreenModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateScreenModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateScreenModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedScreenModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedScreenModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedScreenModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/rooms/{roomId}/Screens/{id}": {
        "put": {
          "tags": [
            "Screens"
          ],
          "operationId": "Screens_UpdateScreen",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "roomId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateScreenModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateScreenModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateScreenModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateScreenModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedScreenModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedScreenModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedScreenModel"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Screens"
          ],
          "operationId": "Screens_DeleteScreen",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "roomId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Sessions": {
        "get": {
          "tags": [
            "Sessions"
          ],
          "summary": "Get all sessions.",
          "operationId": "Sessions_GetAll",
          "parameters": [
            {
              "name": "roomId",
              "in": "query",
              "description": "The room ID the sessions is assigned to.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "from",
              "in": "query",
              "description": "From date.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "to",
              "in": "query",
              "description": "To date.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "fromDuration",
              "in": "query",
              "description": "From duration. Optional.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "toDuration",
              "in": "query",
              "description": "To duration. Optional.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "instructorIds",
              "in": "query",
              "description": "List of instructor ids the result set should be filtered on.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "tagIds",
              "in": "query",
              "description": "List of tag ids the result set should be filtered on.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SessionItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SessionItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SessionItemModel"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Sessions"
          ],
          "operationId": "Sessions_Create",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSessionModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSessionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSessionModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSessionModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedSessionModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedSessionModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedSessionModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Sessions/{id}": {
        "get": {
          "tags": [
            "Sessions"
          ],
          "operationId": "Sessions_Get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/SessionDetailsModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SessionDetailsModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SessionDetailsModel"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Sessions"
          ],
          "operationId": "Sessions_Update",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSessionModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSessionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSessionModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSessionModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedSessionModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedSessionModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedSessionModel"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Sessions"
          ],
          "summary": "Delete session that current user has access to.",
          "operationId": "Sessions_Delete",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Session Id.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "deleteSessionType",
              "in": "query",
              "description": "Type of session deletion. Optional.",
              "schema": {
                "$ref": "#/components/schemas/DeleteSessionType"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Sessions/booking": {
        "get": {
          "tags": [
            "Sessions"
          ],
          "summary": "Gets sessions that current user has access to",
          "operationId": "Sessions_GetSessionsForUser",
          "parameters": [
            {
              "name": "from",
              "in": "query",
              "description": "From date. Optional, defaults to DateTime.UtcNow.",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "to",
              "in": "query",
              "description": "To date. Optional, defaults to DateTime.MaxValue.",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "fromDuration",
              "in": "query",
              "description": "From duration. Optional.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "toDuration",
              "in": "query",
              "description": "To duration. Optional.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "query",
              "in": "query",
              "description": "Search query.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "instructorIds",
              "in": "query",
              "description": "List of instructor ids the result set should be filtered on.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "classModeIds",
              "in": "query",
              "description": "List of class mode ids the result set should be filtered on.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "tagIds",
              "in": "query",
              "description": "List of tag ids the result set should be filtered on.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GetSessionsForUserItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GetSessionsForUserItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GetSessionsForUserItemModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Sessions/booking/count": {
        "get": {
          "tags": [
            "Sessions"
          ],
          "summary": "Gets sessions count that current user has access to",
          "operationId": "Sessions_GetSessionsForUserCount",
          "parameters": [
            {
              "name": "from",
              "in": "query",
              "description": "From date. Optional, defaults to DateTime.UtcNow.",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "to",
              "in": "query",
              "description": "To date. Optional, defaults to DateTime.MaxValue.",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "includeInProgress",
              "in": "query",
              "description": "Include classes that are in progress. Optional.",
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "fromDuration",
              "in": "query",
              "description": "From duration. Optional.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "toDuration",
              "in": "query",
              "description": "To duration. Optional.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "query",
              "in": "query",
              "description": "Search query.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "instructorIds",
              "in": "query",
              "description": "List of instructor ids the result set should be filtered on.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "classModeIds",
              "in": "query",
              "description": "List of class mode ids the result set should be filtered on.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "tagIds",
              "in": "query",
              "description": "List of tag ids the result set should be filtered on.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Sessions/{id}/image": {
        "put": {
          "tags": [
            "Sessions"
          ],
          "operationId": "Sessions_UpdateImage",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Image": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                },
                "encoding": {
                  "Image": {
                    "style": "form"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedSessionImageModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedSessionImageModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedSessionImageModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Sessions/{id}/bookings": {
        "get": {
          "tags": [
            "Sessions"
          ],
          "operationId": "Sessions_GetSessionBookings",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/BookingSessionModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BookingSessionModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BookingSessionModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Sessions/{id}/workouts": {
        "get": {
          "tags": [
            "Sessions"
          ],
          "operationId": "Sessions_GetSessionWorkouts",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SessionWorkoutItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SessionWorkoutItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SessionWorkoutItemModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Sessions/{id}/workouts/tcx": {
        "get": {
          "tags": [
            "Sessions"
          ],
          "operationId": "Sessions_GetTcxById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Sessions/{id}/workouts/fit": {
        "get": {
          "tags": [
            "Sessions"
          ],
          "operationId": "Sessions_GetFitById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Sessions/grouping": {
        "post": {
          "tags": [
            "Sessions"
          ],
          "summary": "Create session group.",
          "operationId": "Sessions_CreateGroup",
          "parameters": [
            {
              "name": "sessionIds",
              "in": "query",
              "description": "List of session ids to become a group.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedSessionGroupModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedSessionGroupModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedSessionGroupModel"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "Sessions"
          ],
          "summary": "Get a list of session group canditates.",
          "operationId": "Sessions_GetSessionGroupCandidates",
          "parameters": [
            {
              "name": "sessionId",
              "in": "query",
              "description": "Session id to select candidates for.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SessionGroupCandidateItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SessionGroupCandidateItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SessionGroupCandidateItemModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Subscriptions": {
        "get": {
          "tags": [
            "Subscriptions"
          ],
          "summary": "Get subscriptions for a specific location.",
          "operationId": "Subscriptions_GetSubscriptions",
          "parameters": [
            {
              "name": "locationId",
              "in": "query",
              "description": "Id of the location.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SubscriptionItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SubscriptionItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SubscriptionItemModel"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Subscriptions"
          ],
          "summary": "Add a subscription.",
          "operationId": "Subscriptions_CreateSubscription",
          "requestBody": {
            "description": "Model with user and location Ids and a subscription type.",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSubscriptionModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSubscriptionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSubscriptionModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSubscriptionModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "tags": [
            "Subscriptions"
          ],
          "summary": "Delete a subscription.",
          "operationId": "Subscriptions_DeleteSubscription",
          "requestBody": {
            "description": ">Model with user and location Ids and a subscription type.",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSubscriptionModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSubscriptionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSubscriptionModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSubscriptionModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Subscriptions/verify": {
        "post": {
          "tags": [
            "Subscriptions"
          ],
          "summary": "Verify a subscription.",
          "operationId": "Subscriptions_VerifySubscription",
          "requestBody": {
            "description": ">Verify subscription model.",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifySubscriptionModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifySubscriptionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifySubscriptionModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifySubscriptionModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Tags": {
        "get": {
          "tags": [
            "Tags"
          ],
          "summary": "Get tags.",
          "operationId": "Tags_Get",
          "parameters": [
            {
              "name": "enterpriseId",
              "in": "query",
              "description": "Optional. Default to first user enterprise.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TagCategoryItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TagCategoryItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TagCategoryItemModel"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Tags"
          ],
          "summary": "Create tag.",
          "operationId": "Tags_CreateTag",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTagModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTagModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTagModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTagModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedTagModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedTagModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedTagModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Tags/id": {
        "delete": {
          "tags": [
            "Tags"
          ],
          "summary": "Delete tag.",
          "operationId": "Tags_DeleteTag",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/TimeZones": {
        "get": {
          "tags": [
            "TimeZones"
          ],
          "operationId": "TimeZones_Get",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TimeZoneModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TimeZoneModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TimeZoneModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Tokens/signalr": {
        "get": {
          "tags": [
            "Tokens"
          ],
          "summary": "Get signalR access token.",
          "operationId": "Tokens_GetSignalRAccessToken",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Users": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get users.",
          "operationId": "Users_GetAll",
          "parameters": [
            {
              "name": "externalUserId",
              "in": "query",
              "description": "User id at external application.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "externalSourceId",
              "in": "query",
              "description": "Type of external application.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "query",
              "in": "query",
              "description": "Search query by First name, Last name, Phone number, Email or display name.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "phoneNumber",
              "in": "query",
              "description": "Search by phone number.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "locationId",
              "in": "query",
              "description": "Id of location to search by.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "roleIds",
              "in": "query",
              "description": "Ids of user roles to search by.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "userIds",
              "in": "query",
              "description": "List of user ids to search by.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "pageNumber",
              "in": "query",
              "description": "Number of the page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Items count per page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 50
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UserItemModelPagedResult"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserItemModelPagedResult"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserItemModelPagedResult"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Users"
          ],
          "operationId": "Users_Create",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedUserModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedUserModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedUserModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Users/public": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get users public information.",
          "operationId": "Users_GetPublic",
          "parameters": [
            {
              "name": "query",
              "in": "query",
              "description": "Search query by First name, Last name, Phone number, Email or display name.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pageNumber",
              "in": "query",
              "description": "Number of the page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Items count per page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 50
              }
            },
            {
              "name": "isOnDemandInstructor",
              "in": "query",
              "description": "\"True\" to get users which were assigned to on demand experience as instructor, \"False\" to get users which were never assigned to on demand experience as instructor. Works only with enterpriseIds. Optional.",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "isVirtualSessionInstructor",
              "in": "query",
              "description": "\"True\" to get users which are assigned to future/in progress virtual session as instructor, \"False\" to get users which are not assigned to future/in progress virtual session as instructor. Works only with locationIds. Optional.",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "roleIds",
              "in": "query",
              "description": "Role Ids.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "locationIds",
              "in": "query",
              "description": "Location Ids to filter by.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "enterpriseIds",
              "in": "query",
              "description": "Enterprise Ids.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/PublicUserItemModelPagedResult"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PublicUserItemModelPagedResult"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PublicUserItemModelPagedResult"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Users/{id}": {
        "get": {
          "tags": [
            "Users"
          ],
          "operationId": "Users_Get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UserDetailsModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserDetailsModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserDetailsModel"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Users"
          ],
          "operationId": "Users_Update",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedUserModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedUserModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedUserModel"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Users"
          ],
          "operationId": "Users_Delete",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Users/{id}/bookings": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Gets bookings for a user.",
          "operationId": "Users_GetBookings",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target user.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "from",
              "in": "query",
              "description": "From date. Optional, defaults to DateTime.UtcNow.",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "to",
              "in": "query",
              "description": "To date. Optional, defaults to DateTime.MaxValue.",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "pageNumber",
              "in": "query",
              "description": "Number of the page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Items count per page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 50
              }
            },
            {
              "name": "classModeIds",
              "in": "query",
              "description": "List of class mode ids the result set should be filtered on.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UserBookingItemModelPagedResult"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserBookingItemModelPagedResult"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserBookingItemModelPagedResult"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Users/{id}/workouts": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get user`s workouts.",
          "operationId": "Users_GetUserWorkouts",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "If of target user.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "pageNumber",
              "in": "query",
              "description": "Number of the page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Items count per page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 50
              }
            },
            {
              "name": "from",
              "in": "query",
              "description": "From DateTime in UTC.",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "to",
              "in": "query",
              "description": "To DateTime in UTC.",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UserWorkoutItemModelPagedResult"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserWorkoutItemModelPagedResult"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserWorkoutItemModelPagedResult"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Users/{id}/rooms": {
        "get": {
          "tags": [
            "Users"
          ],
          "operationId": "Users_GetUserRooms",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserRoomItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserRoomItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserRoomItemModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Users/ftp": {
        "put": {
          "tags": [
            "Users"
          ],
          "operationId": "Users_UpdateFtp",
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateUserFtpModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateUserFtpModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateUserFtpModel"
                  }
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateUserFtpModel"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UpdatedUserFtpModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UpdatedUserFtpModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UpdatedUserFtpModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Users/{id}/locations": {
        "get": {
          "tags": [
            "Users"
          ],
          "operationId": "Users_GetUserLocations",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserLocationItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserLocationItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserLocationItemModel"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Users"
          ],
          "operationId": "Users_CreateUserLocation",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserLocationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserLocationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserLocationModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserLocationModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedUserLocationModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedUserLocationModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedUserLocationModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Users/{id}/locations/{locationId}": {
        "put": {
          "tags": [
            "Users"
          ],
          "operationId": "Users_UpdateUserLocation",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "locationId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserLocationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserLocationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserLocationModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserLocationModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedUserLocationModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedUserLocationModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedUserLocationModel"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Users"
          ],
          "operationId": "Users_DeleteUserLocation",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "locationId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Users/{id}/external-identities": {
        "get": {
          "tags": [
            "Users"
          ],
          "operationId": "Users_GetExternalIdentities",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ExternalIdentityItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ExternalIdentityItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ExternalIdentityItemModel"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Users"
          ],
          "operationId": "Users_CreateExternalIdentity",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateExternalIdentityModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateExternalIdentityModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateExternalIdentityModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateExternalIdentityModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedExternalIdentityModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedExternalIdentityModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedExternalIdentityModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Users/{id}/external-identities/{sourceId}": {
        "put": {
          "tags": [
            "Users"
          ],
          "operationId": "Users_UpdateExternalIdentities",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "sourceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateExternalIdentityModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateExternalIdentityModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateExternalIdentityModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateExternalIdentityModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedExternalIdentityModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedExternalIdentityModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedExternalIdentityModel"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Users"
          ],
          "operationId": "Users_DeleteExternalIdentity",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "sourceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Users/{id}/user-settings": {
        "put": {
          "tags": [
            "Users"
          ],
          "operationId": "Users_UpdateUserSettings",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserSettingsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserSettingsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserSettingsModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserSettingsModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedUserSettingsModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedUserSettingsModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedUserSettingsModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Users/{id}/image": {
        "put": {
          "tags": [
            "Users"
          ],
          "summary": "Update user image.",
          "operationId": "Users_UpdateUserImage",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target user.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "imageKey",
              "in": "query",
              "description": "Image key. Can be 'profile_image' (reserved for our system) or any other string.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Image": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                },
                "encoding": {
                  "Image": {
                    "style": "form"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedUserImageModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedUserImageModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedUserImageModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Users/{id}/image/{key}": {
        "delete": {
          "tags": [
            "Users"
          ],
          "summary": "Delete user image. Not profile image.",
          "operationId": "Users_DeleteUserImage",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target user.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "key",
              "in": "path",
              "description": "Image key.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Users/info": {
        "get": {
          "tags": [
            "Users"
          ],
          "operationId": "Users_GetCurrentUserInfo",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/GetUserInfoModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetUserInfoModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetUserInfoModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Users/{id}/subscriptions": {
        "get": {
          "tags": [
            "Users"
          ],
          "operationId": "Users_GetUserSubscriptions",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserSubscriptionItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserSubscriptionItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserSubscriptionItemModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Users/{id}/integrations": {
        "put": {
          "tags": [
            "Users"
          ],
          "operationId": "Users_UpdateUserIntegrations",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserIntegrationsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserIntegrationsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserIntegrationsModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserIntegrationsModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedUserIntegrationsModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedUserIntegrationsModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedUserIntegrationsModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Users/{id}/integrations/auth-url": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get authorization url for 3d party integration sync.",
          "operationId": "Users_GetUserIntegrationAuthUrl",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target user.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "type",
              "in": "query",
              "description": "Type of integration.",
              "schema": {
                "$ref": "#/components/schemas/UserIntegrationType"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Users/{id}/ftp-history": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Gets ftp history for a user.",
          "operationId": "Users_GetFtpHistory",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target user.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "from",
              "in": "query",
              "description": "From date. Optional.",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "to",
              "in": "query",
              "description": "To date. Optional.",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "pageNumber",
              "in": "query",
              "description": "Number of the page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Items count per page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 50
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/FtpHistoryItemModelPagedResult"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FtpHistoryItemModelPagedResult"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FtpHistoryItemModelPagedResult"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Users/{id}/enterprises": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get user`s enterprises.",
          "operationId": "Users_GetUserEnterprises",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target user.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserEnterpriseItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserEnterpriseItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserEnterpriseItemModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Users/{id}/purchases": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get user`s purchases.",
          "operationId": "Users_GetUserPurchases",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target user.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserPurchaseModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserPurchaseModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserPurchaseModel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Videos": {
        "get": {
          "tags": [
            "Videos"
          ],
          "summary": "Get videos.",
          "operationId": "Videos_GetVideos",
          "parameters": [
            {
              "name": "query",
              "in": "query",
              "description": "Search query.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pageNumber",
              "in": "query",
              "description": "Number of the page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Items count per page.",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 50
              }
            },
            {
              "name": "includePending",
              "in": "query",
              "description": "Add not fully uploaded videos.",
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "Ids of target videos.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "tagsIds",
              "in": "query",
              "description": "Ids of tags to filter by.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "usersIds",
              "in": "query",
              "description": "Ids of users to filter by.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "enterpriseIds",
              "in": "query",
              "description": "Ids of enterprises to filter by. Will only apply if client doesn't have a user.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "sortType",
              "in": "query",
              "description": "Videos sort type.",
              "schema": {
                "$ref": "#/components/schemas/VideosSortType"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/VideoItemModelPagedResult"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/VideoItemModelPagedResult"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/VideoItemModelPagedResult"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Videos"
          ],
          "summary": "Create video data and upload video file to streaming server.",
          "operationId": "Videos_CreateVideo",
          "requestBody": {
            "description": "Create video model.",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVideoModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVideoModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVideoModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVideoModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedVideoModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedVideoModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreatedVideoModel"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Videos"
          ],
          "summary": "Delete multiple videos by ids.",
          "operationId": "Videos_DeleteVideos",
          "requestBody": {
            "description": "Array of videos ids.",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Videos/{id}": {
        "get": {
          "tags": [
            "Videos"
          ],
          "summary": "Get video by id.",
          "operationId": "Videos_GetVideo",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of video in SF DB.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/GetVideoModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetVideoModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetVideoModel"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Videos"
          ],
          "summary": "Update video data.",
          "operationId": "Videos_UpdateVideo",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of video.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "description": "Update video model.",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateVideoModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateVideoModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateVideoModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateVideoModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedVideoModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedVideoModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdatedVideoModel"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Videos"
          ],
          "summary": "Delete video by id.",
          "operationId": "Videos_DeleteVideo",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of video.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Videos/{id}/VodUrl": {
        "get": {
          "tags": [
            "Videos"
          ],
          "summary": "Get video url by id.",
          "operationId": "Videos_GetVideoUrl",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of video in SF DB.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/GetVideoUrlModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetVideoUrlModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetVideoUrlModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Videos/blob-sas-token/{blobName}": {
        "get": {
          "tags": [
            "Videos"
          ],
          "summary": "Get blob SAS token with Read, Write, Delete and Create permissions.",
          "operationId": "Videos_GetBlobSasTokenUri",
          "parameters": [
            {
              "name": "blobName",
              "in": "path",
              "description": "Name of blob.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Workouts": {
        "post": {
          "tags": [
            "Workouts"
          ],
          "summary": "Create workout.",
          "operationId": "Workouts_Create",
          "requestBody": {
            "description": "Create workout model.",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWorkoutModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWorkoutModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWorkoutModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWorkoutModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Workouts/{id}": {
        "get": {
          "tags": [
            "Workouts"
          ],
          "summary": "Get workout with or without additional data.",
          "operationId": "Workouts_GetById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target workout.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "includeAdditionalData",
              "in": "query",
              "description": "Optional param to include/exclude additional data. Default to true.",
              "schema": {
                "type": "boolean",
                "default": true
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkoutDetailsModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkoutDetailsModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkoutDetailsModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/Workouts/{id}/tcx": {
        "get": {
          "tags": [
            "Workouts"
          ],
          "summary": "Get workout export query with tcx file type.",
          "operationId": "Workouts_GetTcxById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target workout.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Workouts/{id}/fit": {
        "get": {
          "tags": [
            "Workouts"
          ],
          "summary": "Get workout export query with fit file type.",
          "operationId": "Workouts_GetFitById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of target workout.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/v0.1/Workouts/import-v1": {
        "post": {
          "tags": [
            "Workouts"
          ],
          "summary": "Import workout from V1 command.",
          "operationId": "Workouts_ImportFromV1",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/V1ImportWorkoutStatusType"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/V1ImportWorkoutStatusType"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/V1ImportWorkoutStatusType"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v0.1/WorkoutTypes": {
        "get": {
          "tags": [
            "WorkoutTypes"
          ],
          "summary": "Get workout types.",
          "operationId": "WorkoutTypes_Get",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/WorkoutTypeItemModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/WorkoutTypeItemModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/WorkoutTypeItemModel"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "AccessScopeType": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "format": "int32"
        },
        "AnonymousTokenModel": {
          "type": "object",
          "properties": {
            "anonymousToken": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "AnonymousTokenStatus": {
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer",
          "format": "int32"
        },
        "AnonymousUserInfoModel": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "nullable": true
            },
            "anonymousTokenStatus": {
              "$ref": "#/components/schemas/AnonymousTokenStatus"
            }
          },
          "additionalProperties": false
        },
        "BattleHistoryItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "battleId": {
              "type": "integer",
              "format": "int32"
            },
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "avgCustomScore": {
              "type": "number",
              "format": "double"
            },
            "avgBeatsScore": {
              "type": "number",
              "format": "double"
            },
            "roomScore": {
              "type": "number",
              "format": "double"
            },
            "createdDateTime": {
              "type": "string",
              "format": "date-time"
            }
          },
          "additionalProperties": false
        },
        "BattleHistoryItemModelPagedResult": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BattleHistoryItemModel"
              },
              "nullable": true
            },
            "totalRecords": {
              "type": "integer",
              "format": "int32"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "BikeConfigurationGridItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32"
            },
            "columnNumber": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "rowNumber": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "wattBike": {
              "type": "boolean"
            },
            "disable": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "BikeConfigurationItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "sensorId": {
              "type": "string",
              "nullable": true
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32"
            },
            "columnNumber": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "rowNumber": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "wattBike": {
              "type": "boolean"
            },
            "disable": {
              "type": "boolean"
            },
            "screens": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "BikeDiagnosticData": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "format": "date-time"
            },
            "adc": {
              "type": "integer",
              "format": "int32"
            },
            "voltage": {
              "type": "number",
              "format": "double"
            }
          },
          "additionalProperties": false
        },
        "BikeDiagnosticDataModel": {
          "type": "object",
          "properties": {
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "antId": {
              "type": "string",
              "nullable": true
            },
            "bikeDiagnosticData": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BikeDiagnosticData"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "BikeScreenItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "rowNumber": {
              "type": "integer",
              "format": "int32"
            },
            "columnNumber": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "BookingDetailsModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "userId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "bookingSessionId": {
              "type": "integer",
              "format": "int32"
            },
            "dateCreated": {
              "type": "string",
              "format": "date-time"
            },
            "bikeConfigurationId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxHr": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxWatt": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "weightKg": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "beltId": {
              "type": "string",
              "nullable": true
            },
            "fmProfileId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "BookingItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "bookingSessionId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "userId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "powerId": {
              "type": "string",
              "nullable": true
            },
            "hrId": {
              "type": "string",
              "nullable": true
            },
            "username": {
              "type": "string",
              "nullable": true
            },
            "ftp": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxHr": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "weightKg": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "showInStudioLeaderboard": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "BookingSessionConfigurationModel": {
          "type": "object",
          "properties": {
            "isVideoVisible": {
              "type": "boolean"
            },
            "isStudioGaugeVisible": {
              "type": "boolean"
            },
            "isStudioPlanVisible": {
              "type": "boolean"
            },
            "isStudioTargetVisible": {
              "type": "boolean"
            },
            "areStudioTimersVisible": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "BookingSessionModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "classTypeId": {
              "$ref": "#/components/schemas/ClassTypeId"
            },
            "beginTime": {
              "type": "string",
              "format": "date-time"
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "classModeId": {
              "$ref": "#/components/schemas/ClassModeId"
            },
            "planId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "competitionId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "spotifyLink": {
              "type": "string",
              "nullable": true
            },
            "isAutoscheduled": {
              "type": "boolean",
              "nullable": true
            },
            "groupId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "bookings": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UserBookingSessionItemModel"
              },
              "nullable": true
            },
            "availableToBookBefore": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "configuration": {
              "$ref": "#/components/schemas/BookingSessionConfigurationModel"
            }
          },
          "additionalProperties": false
        },
        "BookingSessionType": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer",
          "format": "int32"
        },
        "BookingUserItemModel": {
          "type": "object",
          "properties": {
            "bookingSessionId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "userId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "powerId": {
              "type": "string",
              "nullable": true
            },
            "hrId": {
              "type": "string",
              "nullable": true
            },
            "username": {
              "type": "string",
              "nullable": true
            },
            "ftp": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "isFtpLocked": {
              "type": "boolean"
            },
            "maxHr": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "weightKg": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "BookingUsersModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "beginTime": {
              "type": "string",
              "format": "date-time"
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "planId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "spotifyLink": {
              "type": "string",
              "nullable": true
            },
            "bookings": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BookingUserItemModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ClaimModel": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Claim type.",
              "nullable": true
            },
            "value": {
              "type": "string",
              "description": "Claim value.",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Allows settings claims for the client (will be included in the access token)."
        },
        "ClassModeId": {
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer",
          "format": "int32"
        },
        "ClassModeItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "$ref": "#/components/schemas/ClassModeId"
            },
            "displayName": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ClassTypeId": {
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer",
          "format": "int32"
        },
        "ClassTypeItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "$ref": "#/components/schemas/ClassTypeId"
            },
            "displayName": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CompetitionIntervalModel": {
          "type": "object",
          "properties": {
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/CompetitionIntervalType"
            }
          },
          "additionalProperties": false
        },
        "CompetitionIntervalType": {
          "enum": [
            1,
            2
          ],
          "type": "integer",
          "format": "int32"
        },
        "CompetitionOverlayModel": {
          "type": "object",
          "properties": {
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/CompetitionOverlayType"
            }
          },
          "additionalProperties": false
        },
        "CompetitionOverlayType": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer",
          "format": "int32"
        },
        "CompetitionsSortType": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer",
          "format": "int32"
        },
        "ConfirmUserModel": {
          "type": "object",
          "properties": {
            "locationId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "receiveEmails": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "CountryItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "displayName": {
              "type": "string",
              "nullable": true
            },
            "systemName": {
              "type": "string",
              "nullable": true
            },
            "phoneCode": {
              "type": "string",
              "nullable": true
            },
            "isImperial": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "CreateAnonymousUserModel": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "nullable": true
            },
            "password": {
              "type": "string",
              "nullable": true
            },
            "firstName": {
              "type": "string",
              "nullable": true
            },
            "lastName": {
              "type": "string",
              "nullable": true
            },
            "registrationSource": {
              "$ref": "#/components/schemas/RegistrationSource"
            }
          },
          "additionalProperties": false
        },
        "CreateApiClientModel": {
          "type": "object",
          "properties": {
            "clientName": {
              "type": "string",
              "description": "User friendly name of the client.",
              "nullable": true
            },
            "requireConsent": {
              "type": "boolean",
              "description": "Specifies whether a consent screen is required."
            },
            "allowAccessTokensViaBrowser": {
              "type": "boolean",
              "description": "Specifies whether this client is allowed to receive access tokens via the browser. This is useful to harden flows that allow multiple response types (e.g. by disallowing a hybrid flow client that is supposed to use code id_token to add the token response type and thus leaking the token to the browser."
            },
            "allowOfflineAccess": {
              "type": "boolean",
              "description": "Specifies whether this client can request refresh tokens (be requesting the offline_access scope)."
            },
            "alwaysSendClientClaims": {
              "type": "boolean",
              "description": "If set, the client claims will be sent for every flow. If not, only for client credentials flow."
            },
            "alwaysIncludeUserClaimsInIdToken": {
              "type": "boolean",
              "description": "When requesting both an id token and access token, should the user claims always be added to the id token instead of requring the client to use the userinfo endpoint."
            },
            "accessTokenLifetime": {
              "type": "integer",
              "description": "Lifetime of access token in seconds (defaults to 3600 seconds / 1 hour).",
              "format": "int32"
            },
            "identityTokenLifetime": {
              "type": "integer",
              "description": "Lifetime of identity token in seconds (defaults to 300 seconds / 5 minutes).",
              "format": "int32"
            },
            "redirectUris": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Specifies the allowed URIs to return tokens or authorization codes to.",
              "nullable": true
            },
            "postLogoutRedirectUris": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Specifies allowed URIs to redirect to after logout. See the OIDC Connect Session Management spec (https://openid.net/specs/openid-connect-frontchannel-1_0.html) for more details.",
              "nullable": true
            },
            "allowedCorsOrigins": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "If specified, will be used by the default CORS policy service implementations (In-Memory and EF) to build a CORS policy for JavaScript clients.",
              "nullable": true
            },
            "allowedGrantTypes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Specifies the grant types the client is allowed to use.",
              "nullable": true
            },
            "allowedScopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "By default a client has no access to any resources - specify the allowed resources by adding the corresponding scopes names.",
              "nullable": true
            },
            "claims": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ClaimModel"
              },
              "description": "Allows settings claims for the client (will be included in the access token).",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreateBikeModel": {
          "type": "object",
          "properties": {
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "wattBike": {
              "type": "boolean"
            },
            "disable": {
              "type": "boolean"
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32"
            },
            "rowNumber": {
              "type": "integer",
              "format": "int32"
            },
            "columnNumber": {
              "type": "integer",
              "format": "int32"
            },
            "sensorId": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreateBookingModel": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "bookingSessionId": {
              "type": "integer",
              "format": "int32"
            },
            "bikeConfigurationId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxHr": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxWatt": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "weightKg": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "beltId": {
              "type": "string",
              "nullable": true
            },
            "fmProfileId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreateCompetitionModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "intervals": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CompetitionIntervalModel"
              },
              "nullable": true
            },
            "overlays": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CompetitionOverlayModel"
              },
              "nullable": true
            },
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreatedAnonymousUserModel": {
          "type": "object",
          "properties": {
            "anonymousToken": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreatedApiClientModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "ID of created client (only used in API operations on that client).",
              "format": "int32"
            },
            "clientId": {
              "type": "string",
              "description": "Unique ID of the client, that will be used when obtaining tokens, etc.",
              "nullable": true
            },
            "clientSecret": {
              "type": "string",
              "description": "Secrets, associated with that client - credentials to access the token endpoint.",
              "nullable": true
            },
            "clientName": {
              "type": "string",
              "description": "User friendly name of the client.",
              "nullable": true
            },
            "requireConsent": {
              "type": "boolean",
              "description": "Specifies whether a consent screen is required."
            },
            "allowAccessTokensViaBrowser": {
              "type": "boolean",
              "description": "Specifies whether this client is allowed to receive access tokens via the browser. This is useful to harden flows that allow multiple response types (e.g. by disallowing a hybrid flow client that is supposed to use code id_token to add the token response type and thus leaking the token to the browser."
            },
            "allowOfflineAccess": {
              "type": "boolean",
              "description": "Specifies whether this client can request refresh tokens (be requesting the offline_access scope)."
            },
            "alwaysSendClientClaims": {
              "type": "boolean",
              "description": "If set, the client claims will be sent for every flow. If not, only for client credentials flow."
            },
            "alwaysIncludeUserClaimsInIdToken": {
              "type": "boolean",
              "description": "When requesting both an id token and access token, should the user claims always be added to the id token instead of requring the client to use the userinfo endpoint."
            },
            "accessTokenLifetime": {
              "type": "integer",
              "description": "Lifetime of access token in seconds.",
              "format": "int32"
            },
            "identityTokenLifetime": {
              "type": "integer",
              "description": "Lifetime of identity token in seconds.",
              "format": "int32"
            },
            "redirectUris": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Specifies the allowed URIs to return tokens or authorization codes to.",
              "nullable": true
            },
            "postLogoutRedirectUris": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Specifies allowed URIs to redirect to after logout. See the OIDC Connect Session Management spec (https://openid.net/specs/openid-connect-frontchannel-1_0.html) for more details.",
              "nullable": true
            },
            "allowedCorsOrigins": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "If specified, will be used by the default CORS policy service implementations (In-Memory and EF) to build a CORS policy for JavaScript clients.",
              "nullable": true
            },
            "allowedGrantTypes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Specifies the grant types the client is allowed to use.",
              "nullable": true
            },
            "allowedScopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "By default a client has no access to any resources - specify the allowed resources by adding the corresponding scopes names.",
              "nullable": true
            },
            "claims": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ClaimModel"
              },
              "description": "Allows settings claims for the client (will be included in the access token).",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreatedBikeModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "wattBike": {
              "type": "boolean"
            },
            "disable": {
              "type": "boolean"
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32"
            },
            "rowNumber": {
              "type": "integer",
              "format": "int32"
            },
            "columnNumber": {
              "type": "integer",
              "format": "int32"
            },
            "sensorId": {
              "type": "string",
              "nullable": true
            },
            "screens": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreatedBookingModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "userId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "bookingSessionId": {
              "type": "integer",
              "format": "int32"
            },
            "dateCreated": {
              "type": "string",
              "format": "date-time"
            },
            "bikeConfigurationId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxHr": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxWatt": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "weightKg": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "beltId": {
              "type": "string",
              "nullable": true
            },
            "fmProfileId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreatedCompetitionModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "bodyXml": {
              "type": "string",
              "nullable": true
            },
            "dateCreated": {
              "type": "string",
              "format": "date-time"
            },
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreatedEnterpriseModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "logoUrl": {
              "type": "string",
              "nullable": true
            },
            "address": {
              "type": "string",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "phoneCountryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "contactPerson": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreatedExperienceModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "experienceTypeId": {
              "type": "integer",
              "format": "int32"
            },
            "isAvailableOnDemand": {
              "type": "boolean"
            },
            "isRecommended": {
              "type": "boolean"
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "spotifyLink": {
              "type": "string",
              "nullable": true
            },
            "instructorId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "planId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "tagsIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreatedExternalIdentityModel": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "sourceId": {
              "type": "integer",
              "format": "int32"
            },
            "externalId": {
              "type": "string",
              "nullable": true
            },
            "sourceName": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreatedLocationModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "regionId": {
              "type": "integer",
              "format": "int32"
            },
            "isEnabled": {
              "type": "boolean"
            },
            "address": {
              "type": "string",
              "nullable": true
            },
            "phoneCountryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "contactPerson": {
              "type": "string",
              "nullable": true
            },
            "logoUrl": {
              "type": "string",
              "nullable": true
            },
            "countryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "timeZoneId": {
              "type": "string",
              "nullable": true
            },
            "language": {
              "type": "string",
              "nullable": true
            },
            "v1Sync": {
              "type": "boolean"
            },
            "sessionAutoEndExtension": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "showBookingsAheadMinutes": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "profilesOwnerEmail": {
              "type": "string",
              "nullable": true
            },
            "unitsType": {
              "$ref": "#/components/schemas/UnitsType"
            },
            "integrationType": {
              "$ref": "#/components/schemas/IntegrationType"
            },
            "fmAuthorization": {
              "type": "string",
              "nullable": true
            },
            "fmMmsClubId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "zfClientId": {
              "type": "string",
              "nullable": true
            },
            "zfClientSecret": {
              "type": "string",
              "nullable": true
            },
            "zfRegionId": {
              "type": "string",
              "nullable": true
            },
            "zfSiteId": {
              "type": "string",
              "nullable": true
            },
            "mbSiteId": {
              "type": "string",
              "nullable": true
            },
            "mbLocationId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "mtLocationId": {
              "type": "string",
              "nullable": true
            },
            "mtClientSite": {
              "type": "string",
              "nullable": true
            },
            "mtClientSecret": {
              "type": "string",
              "nullable": true
            },
            "zingFitClasses": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "showStudioSessionsInApp": {
              "type": "boolean"
            },
            "autoscheduleSessions": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "CreatedLocationWebhookModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "locationId": {
              "type": "integer",
              "format": "int32"
            },
            "url": {
              "type": "string",
              "nullable": true
            },
            "secretToken": {
              "type": "string",
              "nullable": true
            },
            "secretTokenHeaderName": {
              "type": "string",
              "nullable": true
            },
            "events": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LocationEventId"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreatedPlanModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/PlanType"
            },
            "playlistType": {
              "$ref": "#/components/schemas/PlanPlaylistType"
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "bodyXml": {
              "type": "string",
              "nullable": true
            },
            "dateCreated": {
              "type": "string",
              "format": "date-time"
            },
            "userId": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "CreatedRegionModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "enterpriseId": {
              "type": "integer",
              "format": "int32"
            },
            "address": {
              "type": "string",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "contactPerson": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreatedRoomBattleModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "participantsCount": {
              "type": "integer",
              "format": "int32"
            },
            "roomIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreatedRoomStreamCredentialsModel": {
          "type": "object",
          "properties": {
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "userName": {
              "type": "string",
              "nullable": true
            },
            "token": {
              "type": "string",
              "nullable": true
            },
            "streamKey": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreatedScreenModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "deviceName": {
              "type": "string",
              "nullable": true
            },
            "rows": {
              "type": "integer",
              "format": "int32"
            },
            "columns": {
              "type": "integer",
              "format": "int32"
            },
            "bikes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BikeScreenItemModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreatedSessionGroupModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "groupSize": {
              "type": "integer",
              "format": "int32"
            },
            "isIntegrated": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "CreatedSessionModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "beginTime": {
              "type": "string",
              "format": "date-time"
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/BookingSessionType"
            },
            "classTypeId": {
              "$ref": "#/components/schemas/ClassTypeId"
            },
            "classModeId": {
              "$ref": "#/components/schemas/ClassModeId"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "instructorId": {
              "type": "integer",
              "format": "int32"
            },
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "autoEndExtension": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "isAutoscheduled": {
              "type": "boolean",
              "nullable": true
            },
            "availableToBookBefore": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "fmId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "planId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "competitionId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "spotifyLink": {
              "type": "string",
              "nullable": true
            },
            "tagsIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreatedTagModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "categoryId": {
              "type": "integer",
              "format": "int32"
            },
            "enterpriseId": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "CreatedUserLocationModel": {
          "type": "object",
          "properties": {
            "locationId": {
              "type": "integer",
              "format": "int32"
            },
            "roleId": {
              "type": "integer",
              "format": "int32"
            },
            "locationName": {
              "type": "string",
              "nullable": true
            },
            "roleName": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreatedUserModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "externalId": {
              "type": "string",
              "nullable": true
            },
            "externalSourceId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "firstName": {
              "type": "string",
              "nullable": true
            },
            "lastName": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "phoneCountryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "nickname": {
              "type": "string",
              "nullable": true
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date-time"
            },
            "countryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "genderId": {
              "type": "integer",
              "format": "int32"
            },
            "maxHr": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "weightKg": {
              "type": "number",
              "format": "double"
            },
            "ftp": {
              "type": "integer",
              "format": "int32"
            },
            "isFtpLocked": {
              "type": "boolean"
            },
            "primaryBeltId": {
              "type": "string",
              "nullable": true
            },
            "roleIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "belts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StringStringKeyValuePair"
              },
              "nullable": true
            },
            "locationIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "receiveEmails": {
              "type": "boolean"
            },
            "showInLeaderboard": {
              "type": "boolean"
            },
            "showInStudioLeaderboard": {
              "type": "boolean"
            },
            "unitsType": {
              "$ref": "#/components/schemas/UnitsType"
            },
            "registrationSource": {
              "$ref": "#/components/schemas/RegistrationSource"
            },
            "language": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "spotifyLink": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreatedVideoModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "title": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "dateUploaded": {
              "type": "string",
              "format": "date-time"
            },
            "tagIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "enterpriseIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreateEnterpriseModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "logoUrl": {
              "type": "string",
              "nullable": true
            },
            "address": {
              "type": "string",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "phoneCountryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "contactPerson": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreateExperienceModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "experienceTypeId": {
              "$ref": "#/components/schemas/ExperienceTypeId"
            },
            "isAvailableOnDemand": {
              "type": "boolean"
            },
            "isRecommended": {
              "type": "boolean"
            },
            "spotifyLink": {
              "type": "string",
              "nullable": true
            },
            "instructorId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "planId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "enterprisesIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "tagsIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreateExternalIdentityModel": {
          "type": "object",
          "properties": {
            "sourceId": {
              "type": "integer",
              "format": "int32"
            },
            "externalId": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreateLocationModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "isEnabled": {
              "type": "boolean"
            },
            "address": {
              "type": "string",
              "nullable": true
            },
            "phoneCountryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "contactPerson": {
              "type": "string",
              "nullable": true
            },
            "logoUrl": {
              "type": "string",
              "nullable": true
            },
            "countryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "timeZoneId": {
              "type": "string",
              "nullable": true
            },
            "language": {
              "type": "string",
              "nullable": true
            },
            "v1Sync": {
              "type": "boolean",
              "nullable": true
            },
            "regionId": {
              "type": "integer",
              "format": "int32"
            },
            "sessionAutoEndExtension": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "showBookingsAheadMinutes": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "profilesOwnerEmail": {
              "type": "string",
              "nullable": true
            },
            "unitsType": {
              "$ref": "#/components/schemas/UnitsType"
            },
            "integrationType": {
              "$ref": "#/components/schemas/IntegrationType"
            },
            "fmAuthorization": {
              "type": "string",
              "nullable": true
            },
            "fmMmsClubId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "zfClientId": {
              "type": "string",
              "nullable": true
            },
            "zfClientSecret": {
              "type": "string",
              "nullable": true
            },
            "zfRegionId": {
              "type": "string",
              "nullable": true
            },
            "zfSiteId": {
              "type": "string",
              "nullable": true
            },
            "mbSiteId": {
              "type": "string",
              "nullable": true
            },
            "mbLocationId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "mtLocationId": {
              "type": "string",
              "nullable": true
            },
            "mtClientSite": {
              "type": "string",
              "nullable": true
            },
            "mtClientSecret": {
              "type": "string",
              "nullable": true
            },
            "zingFitClasses": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "showStudioSessionsInApp": {
              "type": "boolean"
            },
            "autoscheduleSessions": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "CreateLocationWebhookModel": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "nullable": true
            },
            "secretToken": {
              "type": "string",
              "nullable": true
            },
            "secretTokenHeaderName": {
              "type": "string",
              "nullable": true
            },
            "events": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LocationEventId"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreatePlanModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "type": {
              "$ref": "#/components/schemas/PlanType"
            },
            "intervals": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PlanIntervalModel"
              },
              "nullable": true
            },
            "playlist": {
              "$ref": "#/components/schemas/PlanPlaylistModel"
            },
            "userId": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "CreateRegionModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "enterpriseId": {
              "type": "integer",
              "format": "int32"
            },
            "address": {
              "type": "string",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "contactPerson": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreateRoomBattleModel": {
          "type": "object",
          "properties": {
            "roomIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreateRoomModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "locationId": {
              "type": "integer",
              "format": "int32"
            },
            "rows": {
              "type": "integer",
              "format": "int32"
            },
            "columns": {
              "type": "integer",
              "format": "int32"
            },
            "roomTypeId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "fmResourceId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "zfRoomId": {
              "type": "string",
              "nullable": true
            },
            "waspCollectorName": {
              "type": "string",
              "nullable": true
            },
            "zingFitClasses": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreateScreenModel": {
          "type": "object",
          "properties": {
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "deviceName": {
              "type": "string",
              "nullable": true
            },
            "rows": {
              "type": "integer",
              "format": "int32"
            },
            "columns": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "CreateSessionModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "beginTime": {
              "type": "string",
              "format": "date-time"
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/BookingSessionType"
            },
            "classTypeId": {
              "$ref": "#/components/schemas/ClassTypeId"
            },
            "classModeId": {
              "$ref": "#/components/schemas/ClassModeId"
            },
            "instructorId": {
              "type": "integer",
              "format": "int32"
            },
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "autoEndExtension": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "isAutoscheduled": {
              "type": "boolean",
              "nullable": true
            },
            "availableToBookBefore": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "fmId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "planId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "spotifyLink": {
              "type": "string",
              "nullable": true
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "competitionId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "tagsIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreateSubscriptionModel": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "locationId": {
              "type": "integer",
              "format": "int32"
            },
            "subscriptionType": {
              "$ref": "#/components/schemas/SubscriptionType"
            }
          },
          "additionalProperties": false
        },
        "CreateTagModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "categoryId": {
              "type": "integer",
              "format": "int32"
            },
            "enterpriseId": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "CreateUserLocationModel": {
          "type": "object",
          "properties": {
            "locationId": {
              "type": "integer",
              "format": "int32"
            },
            "roleId": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "CreateUserModel": {
          "type": "object",
          "properties": {
            "externalId": {
              "type": "string",
              "nullable": true
            },
            "externalSourceId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "password": {
              "type": "string",
              "nullable": true
            },
            "firstName": {
              "type": "string",
              "nullable": true
            },
            "lastName": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "phoneCountryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "nickname": {
              "type": "string",
              "nullable": true
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date-time"
            },
            "countryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "genderId": {
              "type": "integer",
              "format": "int32"
            },
            "maxHr": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "weightKg": {
              "type": "number",
              "format": "double"
            },
            "ftp": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "isFtpLocked": {
              "type": "boolean"
            },
            "primaryBeltId": {
              "type": "string",
              "nullable": true
            },
            "roleIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "beltIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "locationIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "receiveEmails": {
              "type": "boolean"
            },
            "showInLeaderboard": {
              "type": "boolean"
            },
            "showInStudioLeaderboard": {
              "type": "boolean"
            },
            "unitsType": {
              "$ref": "#/components/schemas/UnitsType"
            },
            "registrationSource": {
              "$ref": "#/components/schemas/RegistrationSource"
            },
            "language": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "spotifyLink": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreateVideoModel": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "tagIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "enterpriseIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "tempVideoBlobName": {
              "type": "string",
              "nullable": true
            },
            "instructorId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreateWorkoutCoordModel": {
          "type": "object",
          "properties": {
            "timeStamp": {
              "type": "integer",
              "format": "int32"
            },
            "speed": {
              "type": "number",
              "format": "float",
              "nullable": true
            },
            "distanceInKm": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "beatsScore": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "powerScore": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreateWorkoutHeartRateModel": {
          "type": "object",
          "properties": {
            "timeStamp": {
              "type": "integer",
              "format": "int32"
            },
            "heartRate": {
              "type": "integer",
              "format": "int32"
            },
            "graphHeartRate": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreateWorkoutModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "beginTime": {
              "type": "string",
              "format": "date-time"
            },
            "bookingSessionId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "userId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "roomId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "bikeId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "durationInSeconds": {
              "type": "integer",
              "format": "int32"
            },
            "kiloCalories": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "distanceInKm": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "heartRate": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "avgHeartRate": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "maxHeartRate": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "avgPower": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "maxPower": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "avgSpeed": {
              "type": "number",
              "format": "float",
              "nullable": true
            },
            "maxSpeed": {
              "type": "number",
              "format": "float",
              "nullable": true
            },
            "avgCadence": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "maxCadence": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxAvgWattDuring5Sec": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "maxAvgWattDuring30Sec": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "maxAvgWattDuring1Min": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "maxAvgWattDuring3Min": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "maxAvgWattDuring5Min": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "maxAvgWattDuring20Min": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "maxAvgWattDuring30Min": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "maxAvgWattDuring1Hr": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "beatsAccuracy": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "autoBeatsAccuracy": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "powerAccuracy": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "typeId": {
              "$ref": "#/components/schemas/WorkoutTypeId"
            },
            "experienceId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "customField": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "customFieldRank": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "cumulativeBeatsScore": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "heartRateData": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CreateWorkoutHeartRateModel"
              },
              "nullable": true
            },
            "powerData": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CreateWorkoutPowerModel"
              },
              "nullable": true
            },
            "coordData": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CreateWorkoutCoordModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CreateWorkoutPowerModel": {
          "type": "object",
          "properties": {
            "timeStamp": {
              "type": "integer",
              "format": "int32"
            },
            "accumulatedPower": {
              "type": "integer",
              "format": "int32"
            },
            "accumulatedPowerEventCount": {
              "type": "integer",
              "format": "int32"
            },
            "power": {
              "type": "integer",
              "format": "int32"
            },
            "cadence": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "CustomFieldType": {
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer",
          "format": "int32"
        },
        "DeleteSessionType": {
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "format": "int32"
        },
        "DeleteSubscriptionModel": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "locationId": {
              "type": "integer",
              "format": "int32"
            },
            "subscriptionType": {
              "$ref": "#/components/schemas/SubscriptionType"
            }
          },
          "additionalProperties": false
        },
        "EnterpriseDetailsModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "logoUrl": {
              "type": "string",
              "nullable": true
            },
            "address": {
              "type": "string",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "phoneCountryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "fullPhoneNumber": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "contactPerson": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "EnterpriseItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "address": {
              "type": "string",
              "nullable": true
            },
            "contactPerson": {
              "type": "string",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "phoneCountryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "fullPhoneNumber": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "logoUrl": {
              "type": "string",
              "nullable": true
            },
            "customFieldType": {
              "$ref": "#/components/schemas/CustomFieldType"
            }
          },
          "additionalProperties": false
        },
        "EnterpriseItemModelPagedResult": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EnterpriseItemModel"
              },
              "nullable": true
            },
            "totalRecords": {
              "type": "integer",
              "format": "int32"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "ExperienceDetailsInstructorInfoModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "firstName": {
              "type": "string",
              "nullable": true
            },
            "lastName": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "images": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ExperienceDetailsUserImageModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ExperienceDetailsModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "experienceTypeId": {
              "type": "integer",
              "format": "int32"
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "instructor": {
              "$ref": "#/components/schemas/ExperienceDetailsInstructorInfoModel"
            },
            "isAvailableOnDemand": {
              "type": "boolean"
            },
            "isRecommended": {
              "type": "boolean"
            },
            "planId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "dateCreated": {
              "type": "string",
              "format": "date-time"
            },
            "spotifyLink": {
              "type": "string",
              "nullable": true
            },
            "enterprisesIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ExperienceDetailsTagModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ExperienceDetailsTagModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "classCSS": {
              "type": "string",
              "nullable": true
            },
            "categoryId": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "ExperienceDetailsUserImageModel": {
          "type": "object",
          "properties": {
            "imageKey": {
              "type": "string",
              "nullable": true
            },
            "url": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ExperienceItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "experienceTypeId": {
              "type": "integer",
              "format": "int32"
            },
            "isAvailableOnDemand": {
              "type": "boolean"
            },
            "isRecommended": {
              "type": "boolean"
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "planImageUrl": {
              "type": "string",
              "nullable": true
            },
            "videoImageUrl": {
              "type": "string",
              "nullable": true
            },
            "instructor": {
              "$ref": "#/components/schemas/UserInfoModel"
            },
            "planId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "dateCreated": {
              "type": "string",
              "format": "date-time"
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ExperienceItemTagModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ExperienceItemModelPagedResult": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ExperienceItemModel"
              },
              "nullable": true
            },
            "totalRecords": {
              "type": "integer",
              "format": "int32"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "ExperienceItemTagModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "classCSS": {
              "type": "string",
              "nullable": true
            },
            "categoryId": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "ExperiencesSortType": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer",
          "format": "int32"
        },
        "ExperienceTypeId": {
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer",
          "format": "int32"
        },
        "ExperienceTypeItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "$ref": "#/components/schemas/ExperienceTypeId"
            },
            "displayName": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ExternalIdentityItemModel": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "sourceId": {
              "type": "integer",
              "format": "int32"
            },
            "externalId": {
              "type": "string",
              "nullable": true
            },
            "sourceName": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "FtpHistoryItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "value": {
              "type": "integer",
              "format": "int32"
            },
            "updateDateTime": {
              "type": "string",
              "format": "date-time"
            },
            "workoutId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "userId": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "FtpHistoryItemModelPagedResult": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FtpHistoryItemModel"
              },
              "nullable": true
            },
            "totalRecords": {
              "type": "integer",
              "format": "int32"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "GaugeType": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            8,
            9,
            10,
            11
          ],
          "type": "integer",
          "format": "int32"
        },
        "GenderId": {
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer",
          "format": "int32"
        },
        "GenderItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "displayName": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "GetBikeDetailsModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "wattBike": {
              "type": "boolean"
            },
            "disable": {
              "type": "boolean"
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32"
            },
            "rowNumber": {
              "type": "integer",
              "format": "int32"
            },
            "columnNumber": {
              "type": "integer",
              "format": "int32"
            },
            "sensorId": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "GetBikeScreenItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "rowNumber": {
              "type": "integer",
              "format": "int32"
            },
            "columnNumber": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "GetCompetitionModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "bodyXml": {
              "type": "string",
              "nullable": true
            },
            "owner": {
              "$ref": "#/components/schemas/UserInfoModel"
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "videoImageUrl": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "GetCompetitionsItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "owner": {
              "$ref": "#/components/schemas/UserInfoModel"
            },
            "videoId": {
              "type": "integer",
              "format": "int32"
            },
            "videoImageUrl": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "GetCompetitionsItemModelPagedResult": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetCompetitionsItemModel"
              },
              "nullable": true
            },
            "totalRecords": {
              "type": "integer",
              "format": "int32"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "GetEnterpriseConfigurationModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "customFieldType": {
              "$ref": "#/components/schemas/CustomFieldType"
            },
            "timersToggle": {
              "type": "boolean"
            },
            "experiencesInSession": {
              "type": "boolean"
            },
            "classLeaderboardToggle": {
              "type": "boolean"
            },
            "emojiPolling": {
              "type": "boolean"
            },
            "startingGauge": {
              "type": "boolean"
            },
            "shouldTurnOffDisplay": {
              "type": "boolean"
            },
            "uniteTargetAndPlan": {
              "type": "boolean"
            },
            "lockUserDeletion": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "GetLeaderboardsConfigurationModel": {
          "type": "object",
          "properties": {
            "locationId": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/LeaderboardsConfigurationType"
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "durationStatus": {
              "type": "boolean"
            },
            "distanceStatus": {
              "type": "boolean"
            },
            "caloriesStatus": {
              "type": "boolean"
            },
            "avgPowerStatus": {
              "type": "boolean"
            },
            "maxPowerStatus": {
              "type": "boolean"
            },
            "avgSpeedStatus": {
              "type": "boolean"
            },
            "maxSpeedStatus": {
              "type": "boolean"
            },
            "avgCadenceStatus": {
              "type": "boolean"
            },
            "maxCadenceStatus": {
              "type": "boolean"
            },
            "wattsPerKgFiveSecondsStatus": {
              "type": "boolean"
            },
            "wattsPerKgThirtySecondsStatus": {
              "type": "boolean"
            },
            "wattsPerKgOneMinuteStatus": {
              "type": "boolean"
            },
            "wattsPerKgThreeMinutesStatus": {
              "type": "boolean"
            },
            "wattsPerKgFiveMinutesStatus": {
              "type": "boolean"
            },
            "wattsPerKgTwentyMinutesStatus": {
              "type": "boolean"
            },
            "wattsPerKgThirtyMinutesStatus": {
              "type": "boolean"
            },
            "wattsPerKgSixtyMinutesStatus": {
              "type": "boolean"
            },
            "beatsAccuracy": {
              "type": "boolean"
            },
            "customScore": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "GetLocationEnterpriseConfigurationModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "customFieldType": {
              "$ref": "#/components/schemas/CustomFieldType"
            },
            "timersToggle": {
              "type": "boolean"
            },
            "experiencesInSession": {
              "type": "boolean"
            },
            "classLeaderboardToggle": {
              "type": "boolean"
            },
            "emojiPolling": {
              "type": "boolean"
            },
            "startingGauge": {
              "type": "boolean"
            },
            "shouldTurnOffDisplay": {
              "type": "boolean"
            },
            "uniteTargetAndPlan": {
              "type": "boolean"
            },
            "lockUserDeletion": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "GetLocationsItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "address": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "GetLocationsItemModelPagedResult": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetLocationsItemModel"
              },
              "nullable": true
            },
            "totalRecords": {
              "type": "integer",
              "format": "int32"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "GetLocationWebhookDetailsModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "url": {
              "type": "string",
              "nullable": true
            },
            "secretToken": {
              "type": "string",
              "nullable": true
            },
            "secretTokenHeaderName": {
              "type": "string",
              "nullable": true
            },
            "events": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LocationEventId"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "GetLocationWebhookItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "url": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "GetLocationWebhookItemModelPagedResult": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetLocationWebhookItemModel"
              },
              "nullable": true
            },
            "totalRecords": {
              "type": "integer",
              "format": "int32"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "GetPlanModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/PlanType"
            },
            "playlistType": {
              "$ref": "#/components/schemas/PlanPlaylistType"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "bodyXml": {
              "type": "string",
              "nullable": true
            },
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "userFirstName": {
              "type": "string",
              "nullable": true
            },
            "userLastName": {
              "type": "string",
              "nullable": true
            },
            "userImageUrl": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "GetPlansItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/PlanType"
            },
            "playlistType": {
              "$ref": "#/components/schemas/PlanPlaylistType"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "userInitials": {
              "type": "string",
              "nullable": true
            },
            "userImageUrl": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "GetPlansItemModelPagedResult": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetPlansItemModel"
              },
              "nullable": true
            },
            "totalRecords": {
              "type": "integer",
              "format": "int32"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "GetRoomBattleModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "participantsCount": {
              "type": "integer",
              "format": "int32"
            },
            "roomIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "GetRoomBikeScreenItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "rowNumber": {
              "type": "integer",
              "format": "int32"
            },
            "columnNumber": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "GetRoomDevicesModel": {
          "type": "object",
          "properties": {
            "deviceType": {
              "type": "string",
              "nullable": true
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "monitors": {
              "type": "integer",
              "format": "int32"
            },
            "location": {
              "type": "string",
              "nullable": true
            },
            "updated": {
              "type": "string",
              "format": "date-time"
            },
            "teamViewerId": {
              "type": "string",
              "nullable": true
            },
            "version": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "GetRoomStreamCredentialsModel": {
          "type": "object",
          "properties": {
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "userName": {
              "type": "string",
              "nullable": true
            },
            "token": {
              "type": "string",
              "nullable": true
            },
            "streamKey": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "GetSessionInfoModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "localBeginTime": {
              "type": "string",
              "format": "date-time"
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "GetSessionsForUserItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "beginTime": {
              "type": "string",
              "format": "date-time"
            },
            "availableTime": {
              "type": "string",
              "format": "date-time"
            },
            "localBeginTime": {
              "type": "string",
              "format": "date-time"
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/BookingSessionType"
            },
            "classTypeId": {
              "$ref": "#/components/schemas/ClassTypeId"
            },
            "classModeId": {
              "$ref": "#/components/schemas/ClassModeId"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "instructor": {
              "$ref": "#/components/schemas/UserInfoModel"
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "roomName": {
              "type": "string",
              "nullable": true
            },
            "locationId": {
              "type": "integer",
              "format": "int32"
            },
            "isLocationEnabled": {
              "type": "boolean"
            },
            "locationName": {
              "type": "string",
              "nullable": true
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "planId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "competitionId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "planImageUrl": {
              "type": "string",
              "nullable": true
            },
            "availableToBookBefore": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "totalParticipants": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "totalVirtualParticipants": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "totalBookedSpots": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "totalAvailableSpots": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "userBookingId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "isSpotifyIncluded": {
              "type": "boolean"
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SessionForUserItemTagModel"
              },
              "nullable": true
            },
            "fmId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "zfId": {
              "type": "string",
              "nullable": true
            },
            "mbId": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "GetUserInfoItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "GetUserInfoModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "initials": {
              "type": "string",
              "nullable": true
            },
            "firstName": {
              "type": "string",
              "nullable": true
            },
            "lastName": {
              "type": "string",
              "nullable": true
            },
            "unitsType": {
              "$ref": "#/components/schemas/UnitsType"
            },
            "language": {
              "type": "string",
              "nullable": true
            },
            "isConfirmed": {
              "type": "boolean"
            },
            "genderId": {
              "type": "integer",
              "format": "int32"
            },
            "showInLeaderboard": {
              "type": "boolean"
            },
            "showInStudioLeaderboard": {
              "type": "boolean"
            },
            "showStudioSessionsInApp": {
              "type": "boolean"
            },
            "isBrowserAnalyticsAllowed": {
              "type": "boolean",
              "nullable": true
            },
            "location": {
              "$ref": "#/components/schemas/GetUserInfoItemModel"
            },
            "enterprise": {
              "$ref": "#/components/schemas/GetUserInfoItemModel"
            },
            "country": {
              "$ref": "#/components/schemas/GetUserInfoItemModel"
            },
            "enterpriseConfiguration": {
              "$ref": "#/components/schemas/UserEnterpriseConfiguration"
            }
          },
          "additionalProperties": false
        },
        "GetV1PlanItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "durationInMinutes": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "GetV1PlanItemModelPagedResult": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetV1PlanItemModel"
              },
              "nullable": true
            },
            "totalRecords": {
              "type": "integer",
              "format": "int32"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "GetVideoModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "externalUid": {
              "type": "string",
              "nullable": true
            },
            "title": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "thumbnailUrl": {
              "type": "string",
              "nullable": true
            },
            "owner": {
              "$ref": "#/components/schemas/UserInfoModel"
            },
            "dateUploaded": {
              "type": "string",
              "format": "date-time"
            },
            "streamUrls": {
              "$ref": "#/components/schemas/VideoUrlModel"
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/VideoTagModel"
              },
              "nullable": true
            },
            "enterprises": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "GetVideoUrlModel": {
          "type": "object",
          "properties": {
            "hlsUrl": {
              "type": "string",
              "nullable": true
            },
            "rtspUrl": {
              "type": "string",
              "nullable": true
            },
            "duration": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "IntegrationType": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer",
          "format": "int32"
        },
        "LatestBikeDiagnosticData": {
          "type": "object",
          "properties": {
            "antId": {
              "type": "string",
              "nullable": true
            },
            "time": {
              "type": "string",
              "format": "date-time"
            },
            "adc": {
              "type": "integer",
              "format": "int32"
            },
            "voltage": {
              "type": "number",
              "format": "double"
            }
          },
          "additionalProperties": false
        },
        "LeaderboardItemModel": {
          "type": "object",
          "properties": {
            "rank": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "score": {
              "type": "number",
              "format": "double"
            },
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "firstName": {
              "type": "string",
              "nullable": true
            },
            "lastName": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "LeaderboardItemModelLeaderboardModel": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/LeaderboardType"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LeaderboardItemModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "LeaderboardsConfigurationType": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer",
          "format": "int32"
        },
        "LeaderboardType": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19
          ],
          "type": "integer",
          "format": "int32"
        },
        "LocationDetailsModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "enterpriseId": {
              "type": "integer",
              "format": "int32"
            },
            "regionId": {
              "type": "integer",
              "format": "int32"
            },
            "dateCreated": {
              "type": "string",
              "format": "date-time"
            },
            "isEnabled": {
              "type": "boolean"
            },
            "address": {
              "type": "string",
              "nullable": true
            },
            "phoneCountryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "contactPerson": {
              "type": "string",
              "nullable": true
            },
            "logoUrl": {
              "type": "string",
              "nullable": true
            },
            "countryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "timeZoneId": {
              "type": "string",
              "nullable": true
            },
            "language": {
              "type": "string",
              "nullable": true
            },
            "disableBooking": {
              "type": "boolean"
            },
            "sessionAutoEndExtension": {
              "type": "integer",
              "format": "int32"
            },
            "showBookingsAheadMinutes": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "profilesOwnerEmail": {
              "type": "string",
              "nullable": true
            },
            "unitsType": {
              "$ref": "#/components/schemas/UnitsType"
            },
            "integrationType": {
              "$ref": "#/components/schemas/IntegrationType"
            },
            "defaultGaugeType": {
              "$ref": "#/components/schemas/GaugeType"
            },
            "fmAuthorization": {
              "type": "string",
              "nullable": true
            },
            "fmMmsClubId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "zfClientId": {
              "type": "string",
              "nullable": true
            },
            "zfClientSecret": {
              "type": "string",
              "nullable": true
            },
            "zfRegionId": {
              "type": "string",
              "nullable": true
            },
            "zfSiteId": {
              "type": "string",
              "nullable": true
            },
            "mbSiteId": {
              "type": "string",
              "nullable": true
            },
            "mbLocationId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "mtLocationId": {
              "type": "string",
              "nullable": true
            },
            "mtClientSite": {
              "type": "string",
              "nullable": true
            },
            "mtClientSecret": {
              "type": "string",
              "nullable": true
            },
            "showStudioSessionsInApp": {
              "type": "boolean"
            },
            "defaultBookingOpeningTime": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "autoscheduleSessions": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "LocationEventId": {
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer",
          "format": "int32"
        },
        "LocationInfoItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "LocationInfoItemModelPagedResult": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LocationInfoItemModel"
              },
              "nullable": true
            },
            "totalRecords": {
              "type": "integer",
              "format": "int32"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "LocationItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "dateCreated": {
              "type": "string",
              "format": "date-time"
            },
            "isEnabled": {
              "type": "boolean"
            },
            "phoneCountryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "contactPerson": {
              "type": "string",
              "nullable": true
            },
            "showBookingsAheadMinutes": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "LocationItemModelPagedResult": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LocationItemModel"
              },
              "nullable": true
            },
            "totalRecords": {
              "type": "integer",
              "format": "int32"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "NearestSession": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "beginTime": {
              "type": "string",
              "format": "date-time"
            },
            "endTime": {
              "type": "string",
              "format": "date-time"
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "isStarted": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "PlanIntervalModel": {
          "type": "object",
          "properties": {
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "value": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/PlanIntervalType"
            },
            "script": {
              "$ref": "#/components/schemas/PlanScriptModel"
            },
            "test": {
              "$ref": "#/components/schemas/PlanTestModel"
            }
          },
          "additionalProperties": false
        },
        "PlanIntervalType": {
          "enum": [
            1,
            2
          ],
          "type": "integer",
          "format": "int32"
        },
        "PlanPlaylistModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "owner": {
              "type": "string",
              "nullable": true
            },
            "type": {
              "$ref": "#/components/schemas/PlanPlaylistType"
            },
            "songs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PlanSongModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PlanPlaylistType": {
          "enum": [
            1,
            2
          ],
          "type": "integer",
          "format": "int32"
        },
        "PlanScriptModel": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PlanSongModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "nullable": true
            },
            "title": {
              "type": "string",
              "nullable": true
            },
            "artist": {
              "type": "string",
              "nullable": true
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "bpm": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PlansSortType": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer",
          "format": "int32"
        },
        "PlansType": {
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer",
          "format": "int32"
        },
        "PlanTestModel": {
          "type": "object",
          "properties": {
            "duration": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "PlanType": {
          "enum": [
            1,
            2
          ],
          "type": "integer",
          "format": "int32"
        },
        "ProblemDetails": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "nullable": true
            },
            "title": {
              "type": "string",
              "nullable": true
            },
            "status": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "detail": {
              "type": "string",
              "nullable": true
            },
            "instance": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": { }
        },
        "PublicUserItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "phone": {
              "type": "string",
              "nullable": true
            },
            "firstName": {
              "type": "string",
              "nullable": true
            },
            "lastName": {
              "type": "string",
              "nullable": true
            },
            "displayName": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PublicUserItemModelPagedResult": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PublicUserItemModel"
              },
              "nullable": true
            },
            "totalRecords": {
              "type": "integer",
              "format": "int32"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "PurchaseSource": {
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer",
          "format": "int32"
        },
        "RecentBattleHistoryItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "battleId": {
              "type": "integer",
              "format": "int32"
            },
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "avgCustomScore": {
              "type": "number",
              "format": "double"
            },
            "avgBeatsScore": {
              "type": "number",
              "format": "double"
            },
            "roomScore": {
              "type": "number",
              "format": "double"
            },
            "createdDateTime": {
              "type": "string",
              "format": "date-time"
            }
          },
          "additionalProperties": false
        },
        "RecurrentSessionUpdateType": {
          "enum": [
            1,
            2
          ],
          "type": "integer",
          "format": "int32"
        },
        "RecurrentTypeId": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer",
          "format": "int32"
        },
        "RecurrentTypeItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "$ref": "#/components/schemas/RecurrentTypeId"
            },
            "displayName": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "RegionDetailsModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "enterpriseId": {
              "type": "integer",
              "format": "int32"
            },
            "address": {
              "type": "string",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "contactPerson": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "RegionItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "RegionItemModelPagedResult": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RegionItemModel"
              },
              "nullable": true
            },
            "totalRecords": {
              "type": "integer",
              "format": "int32"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "RegistrationSource": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10
          ],
          "type": "integer",
          "format": "int32"
        },
        "RoleItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "systemName": {
              "type": "string",
              "nullable": true
            },
            "type": {
              "$ref": "#/components/schemas/RoleType"
            }
          },
          "additionalProperties": false
        },
        "RoleType": {
          "enum": [
            1,
            2
          ],
          "type": "integer",
          "format": "int32"
        },
        "RoomBattleItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "participantsCount": {
              "type": "integer",
              "format": "int32"
            },
            "roomIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "RoomBattleItemModelPagedResult": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RoomBattleItemModel"
              },
              "nullable": true
            },
            "totalRecords": {
              "type": "integer",
              "format": "int32"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "RoomBikesGridModel": {
          "type": "object",
          "properties": {
            "rows": {
              "type": "integer",
              "format": "int32"
            },
            "columns": {
              "type": "integer",
              "format": "int32"
            },
            "bikes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BikeConfigurationGridItemModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "RoomDetailsModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "logoUrl": {
              "type": "string",
              "nullable": true
            },
            "locationId": {
              "type": "integer",
              "format": "int32"
            },
            "enterpriseId": {
              "type": "integer",
              "format": "int32"
            },
            "rows": {
              "type": "integer",
              "format": "int32"
            },
            "columns": {
              "type": "integer",
              "format": "int32"
            },
            "roomTypeId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "fmResourceId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "zfRoomId": {
              "type": "string",
              "nullable": true
            },
            "zingFitClasses": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "mindBodyClasses": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "bikes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BikeConfigurationItemModel"
              },
              "nullable": true
            },
            "screens": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ScreenModel"
              },
              "nullable": true
            },
            "waspCollectorName": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "RoomDiagnosticDataModel": {
          "type": "object",
          "properties": {
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "bikesDiagnosticData": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LatestBikeDiagnosticData"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "RoomInfoItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "RoomInfoItemModelPagedResult": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RoomInfoItemModel"
              },
              "nullable": true
            },
            "totalRecords": {
              "type": "integer",
              "format": "int32"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "RoomTypeItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ScreenItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "deviceName": {
              "type": "string",
              "nullable": true
            },
            "display": {
              "type": "integer",
              "format": "int32"
            },
            "rows": {
              "type": "integer",
              "format": "int32"
            },
            "columns": {
              "type": "integer",
              "format": "int32"
            },
            "bikes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetBikeScreenItemModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ScreenModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "deviceName": {
              "type": "string",
              "nullable": true
            },
            "rows": {
              "type": "integer",
              "format": "int32"
            },
            "columns": {
              "type": "integer",
              "format": "int32"
            },
            "display": {
              "type": "integer",
              "format": "int32"
            },
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "bikes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GetRoomBikeScreenItemModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "SendConfirmationEmailResultModel": {
          "type": "object",
          "properties": {
            "updatedAnonymousToken": {
              "type": "string",
              "nullable": true
            },
            "anonymousTokenStatus": {
              "$ref": "#/components/schemas/AnonymousTokenStatus"
            }
          },
          "additionalProperties": false
        },
        "SessionDetailsConfigurationModel": {
          "type": "object",
          "properties": {
            "areMetricsVisible": {
              "type": "boolean"
            },
            "isAppGaugeVisible": {
              "type": "boolean"
            },
            "isAppPlanVisible": {
              "type": "boolean"
            },
            "isVideoVisible": {
              "type": "boolean"
            },
            "isStudioGaugeVisible": {
              "type": "boolean"
            },
            "isStudioPlanVisible": {
              "type": "boolean"
            },
            "isStudioTargetVisible": {
              "type": "boolean"
            },
            "areStudioTimersVisible": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "SessionDetailsInstructorInfoModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "firstName": {
              "type": "string",
              "nullable": true
            },
            "lastName": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "images": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SessionDetailsUserImageModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "SessionDetailsModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "userBookingId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "beginTime": {
              "type": "string",
              "format": "date-time"
            },
            "localBeginTime": {
              "type": "string",
              "format": "date-time"
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "extendDuration": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/BookingSessionType"
            },
            "classTypeId": {
              "$ref": "#/components/schemas/ClassTypeId"
            },
            "classModeId": {
              "$ref": "#/components/schemas/ClassModeId"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "instructor": {
              "$ref": "#/components/schemas/SessionDetailsInstructorInfoModel"
            },
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "roomName": {
              "type": "string",
              "nullable": true
            },
            "locationId": {
              "type": "integer",
              "format": "int32"
            },
            "locationName": {
              "type": "string",
              "nullable": true
            },
            "showBookingAheadMinutes": {
              "type": "integer",
              "format": "int32"
            },
            "enterpriseId": {
              "type": "integer",
              "format": "int32"
            },
            "availableToBookBefore": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "autoEndExtension": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "isAutoscheduled": {
              "type": "boolean",
              "nullable": true
            },
            "fmId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "planId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "competitionId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "planImageUrl": {
              "type": "string",
              "nullable": true
            },
            "videoImageUrl": {
              "type": "string",
              "nullable": true
            },
            "totalVirtualParticipants": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "totalBookedSpots": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "totalAvailableSpots": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "spotifyLink": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "groupId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "groupSize": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "recurrentGroupId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "recurrentTypeId": {
              "$ref": "#/components/schemas/RecurrentTypeId"
            },
            "integrationType": {
              "$ref": "#/components/schemas/IntegrationType"
            },
            "isGroupIntegrated": {
              "type": "boolean",
              "nullable": true
            },
            "recurrentEndDateTime": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "configuration": {
              "$ref": "#/components/schemas/SessionDetailsConfigurationModel"
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SessionDetailsTagModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "SessionDetailsTagModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "classCSS": {
              "type": "string",
              "nullable": true
            },
            "categoryId": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "SessionDetailsUserImageModel": {
          "type": "object",
          "properties": {
            "imageKey": {
              "type": "string",
              "nullable": true
            },
            "url": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "SessionForUserItemTagModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "classCSS": {
              "type": "string",
              "nullable": true
            },
            "categoryId": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "SessionGroupCandidateItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "locationName": {
              "type": "string",
              "nullable": true
            },
            "roomName": {
              "type": "string",
              "nullable": true
            },
            "isInGroup": {
              "type": "boolean"
            },
            "isRecurrent": {
              "type": "boolean"
            },
            "instructor": {
              "$ref": "#/components/schemas/UserInfoModel"
            }
          },
          "additionalProperties": false
        },
        "SessionItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "beginTime": {
              "type": "string",
              "format": "date-time"
            },
            "localBeginTime": {
              "type": "string",
              "format": "date-time"
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "extendDuration": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/BookingSessionType"
            },
            "classTypeId": {
              "$ref": "#/components/schemas/ClassTypeId"
            },
            "classModeId": {
              "$ref": "#/components/schemas/ClassModeId"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "instructorId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "instructor": {
              "$ref": "#/components/schemas/UserInfoModel"
            },
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "autoEndExtension": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "isAutoscheduled": {
              "type": "boolean",
              "nullable": true
            },
            "planId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "competitionId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "spotifyLink": {
              "type": "string",
              "nullable": true
            },
            "isEnded": {
              "type": "boolean"
            },
            "recurrentGroupId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "groupId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "isIntegration": {
              "type": "boolean"
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SessionItemTagModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "SessionItemTagModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "classCSS": {
              "type": "string",
              "nullable": true
            },
            "categoryId": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "SessionWorkoutItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "beginTime": {
              "type": "string",
              "format": "date-time"
            },
            "durationInSeconds": {
              "type": "integer",
              "format": "int32"
            },
            "distanceInKm": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "kiloCalories": {
              "type": "integer",
              "format": "int32"
            },
            "heartRate": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "avgWatt": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "avgSpeed": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxSpeed": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "avgHeartRate": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "userId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "customField": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "cumulativeBeatsScore": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "beatsAccuracy": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "autoBeatsAccuracy": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "powerAccuracy": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "StringStringKeyValuePair": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "nullable": true
            },
            "value": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "SubscriptionItemModel": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "subscriptionType": {
              "$ref": "#/components/schemas/SubscriptionType"
            }
          },
          "additionalProperties": false
        },
        "SubscriptionState": {
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "format": "int32"
        },
        "SubscriptionType": {
          "enum": [
            1
          ],
          "type": "integer",
          "format": "int32"
        },
        "TagCategoryItemModel": {
          "type": "object",
          "properties": {
            "categoryId": {
              "type": "integer",
              "format": "int32"
            },
            "categoryName": {
              "type": "string",
              "nullable": true
            },
            "classCSS": {
              "type": "string",
              "nullable": true
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagItemModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "TagItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "enterpriseId": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "TimeZoneModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "nullable": true
            },
            "displayName": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UnitsType": {
          "enum": [
            1,
            2
          ],
          "type": "integer",
          "format": "int32"
        },
        "UpdateApiClientModel": {
          "type": "object",
          "properties": {
            "clientName": {
              "type": "string",
              "description": "User friendly name of the client.",
              "nullable": true
            },
            "requireConsent": {
              "type": "boolean",
              "description": "Specifies whether a consent screen is required."
            },
            "allowAccessTokensViaBrowser": {
              "type": "boolean",
              "description": "Specifies whether this client is allowed to receive access tokens via the browser. This is useful to harden flows that allow multiple response types (e.g. by disallowing a hybrid flow client that is supposed to use code id_token to add the token response type and thus leaking the token to the browser."
            },
            "allowOfflineAccess": {
              "type": "boolean",
              "description": "Specifies whether this client can request refresh tokens (be requesting the offline_access scope)."
            },
            "alwaysSendClientClaims": {
              "type": "boolean",
              "description": "If set, the client claims will be sent for every flow. If not, only for client credentials flow."
            },
            "alwaysIncludeUserClaimsInIdToken": {
              "type": "boolean",
              "description": "When requesting both an id token and access token, should the user claims always be added to the id token instead of requring the client to use the userinfo endpoint."
            },
            "accessTokenLifetime": {
              "type": "integer",
              "description": "Lifetime of access token in seconds (defaults to 3600 seconds / 1 hour).",
              "format": "int32"
            },
            "identityTokenLifetime": {
              "type": "integer",
              "description": "Lifetime of identity token in seconds (defaults to 300 seconds / 5 minutes).",
              "format": "int32"
            },
            "redirectUris": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Specifies the allowed URIs to return tokens or authorization codes to.",
              "nullable": true
            },
            "postLogoutRedirectUris": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Specifies allowed URIs to redirect to after logout. See the OIDC Connect Session Management spec (https://openid.net/specs/openid-connect-frontchannel-1_0.html) for more details.",
              "nullable": true
            },
            "allowedCorsOrigins": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "If specified, will be used by the default CORS policy service implementations (In-Memory and EF) to build a CORS policy for JavaScript clients.",
              "nullable": true
            },
            "allowedGrantTypes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Specifies the grant types the client is allowed to use.",
              "nullable": true
            },
            "allowedScopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "By default a client has no access to any resources - specify the allowed resources by adding the corresponding scopes names.",
              "nullable": true
            },
            "claims": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UpdateClaimModel"
              },
              "description": "Allows settings claims for the client (will be included in the access token).",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdateBikeModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "wattBike": {
              "type": "boolean"
            },
            "disable": {
              "type": "boolean"
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32"
            },
            "rowNumber": {
              "type": "integer",
              "format": "int32"
            },
            "columnNumber": {
              "type": "integer",
              "format": "int32"
            },
            "sensorId": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdateBikeScreenItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "rowNumber": {
              "type": "integer",
              "format": "int32"
            },
            "columnNumber": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "UpdateBikesRangeItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32"
            },
            "columnNumber": {
              "type": "integer",
              "format": "int32"
            },
            "rowNumber": {
              "type": "integer",
              "format": "int32"
            },
            "wattBike": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "UpdateBikesRangeModel": {
          "type": "object",
          "properties": {
            "bikes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UpdateBikesRangeItemModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdateBookingModel": {
          "type": "object",
          "properties": {
            "bikeConfigurationId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxHr": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxWatt": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "weightKg": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "beltId": {
              "type": "string",
              "nullable": true
            },
            "fmProfileId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdateClaimModel": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Claim type.",
              "nullable": true
            },
            "value": {
              "type": "string",
              "description": "Claim value.",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Allows settings claims for the client (will be included in the access token)."
        },
        "UpdateCompetitionModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "intervals": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CompetitionIntervalModel"
              },
              "nullable": true
            },
            "overlays": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CompetitionOverlayModel"
              },
              "nullable": true
            },
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdatedApiClientModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "ID of created client (only used in API operations on that client).",
              "format": "int32"
            },
            "clientId": {
              "type": "string",
              "description": "Unique ID of the client, that will be used when obtaining tokens, etc.",
              "nullable": true
            },
            "clientName": {
              "type": "string",
              "description": "User friendly name of the client.",
              "nullable": true
            },
            "requireConsent": {
              "type": "boolean",
              "description": "Specifies whether a consent screen is required."
            },
            "allowAccessTokensViaBrowser": {
              "type": "boolean",
              "description": "Specifies whether this client is allowed to receive access tokens via the browser. This is useful to harden flows that allow multiple response types (e.g. by disallowing a hybrid flow client that is supposed to use code id_token to add the token response type and thus leaking the token to the browser."
            },
            "allowOfflineAccess": {
              "type": "boolean",
              "description": "Specifies whether this client can request refresh tokens (be requesting the offline_access scope)."
            },
            "alwaysSendClientClaims": {
              "type": "boolean",
              "description": "If set, the client claims will be sent for every flow. If not, only for client credentials flow."
            },
            "alwaysIncludeUserClaimsInIdToken": {
              "type": "boolean",
              "description": "When requesting both an id token and access token, should the user claims always be added to the id token instead of requring the client to use the userinfo endpoint."
            },
            "accessTokenLifetime": {
              "type": "integer",
              "description": "Lifetime of access token in seconds.",
              "format": "int32"
            },
            "identityTokenLifetime": {
              "type": "integer",
              "description": "Lifetime of identity token in seconds.",
              "format": "int32"
            },
            "redirectUris": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Specifies the allowed URIs to return tokens or authorization codes to.",
              "nullable": true
            },
            "postLogoutRedirectUris": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Specifies allowed URIs to redirect to after logout. See the OIDC Connect Session Management spec (https://openid.net/specs/openid-connect-frontchannel-1_0.html) for more details.",
              "nullable": true
            },
            "allowedCorsOrigins": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "If specified, will be used by the default CORS policy service implementations (In-Memory and EF) to build a CORS policy for JavaScript clients.",
              "nullable": true
            },
            "allowedGrantTypes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Specifies the grant types the client is allowed to use.",
              "nullable": true
            },
            "allowedScopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "By default a client has no access to any resources - specify the allowed resources by adding the corresponding scopes names.",
              "nullable": true
            },
            "claims": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UpdateClaimModel"
              },
              "description": "Allows settings claims for the client (will be included in the access token).",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdatedBikeItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "rowNumber": {
              "type": "integer",
              "format": "int32"
            },
            "columnNumber": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "UpdatedBikeModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "wattBike": {
              "type": "boolean"
            },
            "disable": {
              "type": "boolean"
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32"
            },
            "rowNumber": {
              "type": "integer",
              "format": "int32"
            },
            "columnNumber": {
              "type": "integer",
              "format": "int32"
            },
            "sensorId": {
              "type": "string",
              "nullable": true
            },
            "screens": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdatedBikesRangeItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32"
            },
            "columnNumber": {
              "type": "integer",
              "format": "int32"
            },
            "rowNumber": {
              "type": "integer",
              "format": "int32"
            },
            "wattBike": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "UpdatedBookingModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "bikeConfigurationId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxHr": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxWatt": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "weightKg": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "beltId": {
              "type": "string",
              "nullable": true
            },
            "fmProfileId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdatedCompetitionModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "bodyXml": {
              "type": "string",
              "nullable": true
            },
            "dateCreated": {
              "type": "string",
              "format": "date-time"
            },
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdatedEnterpriseModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "logoUrl": {
              "type": "string",
              "nullable": true
            },
            "address": {
              "type": "string",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "phoneCountryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "fullPhoneNumber": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "contactPerson": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdatedExperienceImageModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdatedExperienceModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "experienceTypeId": {
              "type": "integer",
              "format": "int32"
            },
            "isAvailableOnDemand": {
              "type": "boolean"
            },
            "isRecommended": {
              "type": "boolean"
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "spotifyLink": {
              "type": "string",
              "nullable": true
            },
            "instructorId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "planId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "enterpriseIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "tagsIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdatedExternalIdentityModel": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "sourceId": {
              "type": "integer",
              "format": "int32"
            },
            "externalId": {
              "type": "string",
              "nullable": true
            },
            "sourceName": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdatedLeaderboardsConfigurationModel": {
          "type": "object",
          "properties": {
            "locationId": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/LeaderboardsConfigurationType"
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "durationStatus": {
              "type": "boolean"
            },
            "distanceStatus": {
              "type": "boolean"
            },
            "caloriesStatus": {
              "type": "boolean"
            },
            "avgPowerStatus": {
              "type": "boolean"
            },
            "maxPowerStatus": {
              "type": "boolean"
            },
            "avgSpeedStatus": {
              "type": "boolean"
            },
            "maxSpeedStatus": {
              "type": "boolean"
            },
            "avgCadenceStatus": {
              "type": "boolean"
            },
            "maxCadenceStatus": {
              "type": "boolean"
            },
            "wattsPerKgFiveSecondsStatus": {
              "type": "boolean"
            },
            "wattsPerKgThirtySecondsStatus": {
              "type": "boolean"
            },
            "wattsPerKgOneMinuteStatus": {
              "type": "boolean"
            },
            "wattsPerKgThreeMinutesStatus": {
              "type": "boolean"
            },
            "wattsPerKgFiveMinutesStatus": {
              "type": "boolean"
            },
            "wattsPerKgTwentyMinutesStatus": {
              "type": "boolean"
            },
            "wattsPerKgThirtyMinutesStatus": {
              "type": "boolean"
            },
            "wattsPerKgSixtyMinutesStatus": {
              "type": "boolean"
            },
            "beatsAccuracy": {
              "type": "boolean"
            },
            "customScore": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "UpdatedLocationModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "enterpriseId": {
              "type": "integer",
              "format": "int32"
            },
            "regionId": {
              "type": "integer",
              "format": "int32"
            },
            "isEnabled": {
              "type": "boolean"
            },
            "dateCreated": {
              "type": "string",
              "format": "date-time"
            },
            "disableBooking": {
              "type": "boolean"
            },
            "address": {
              "type": "string",
              "nullable": true
            },
            "phoneCountryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "contactPerson": {
              "type": "string",
              "nullable": true
            },
            "logoUrl": {
              "type": "string",
              "nullable": true
            },
            "countryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "timeZoneId": {
              "type": "string",
              "nullable": true
            },
            "language": {
              "type": "string",
              "nullable": true
            },
            "v1Sync": {
              "type": "boolean"
            },
            "sessionAutoEndExtension": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "showBookingsAheadMinutes": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "profilesOwnerEmail": {
              "type": "string",
              "nullable": true
            },
            "unitsType": {
              "$ref": "#/components/schemas/UnitsType"
            },
            "integrationType": {
              "$ref": "#/components/schemas/IntegrationType"
            },
            "defaultGaugeType": {
              "$ref": "#/components/schemas/GaugeType"
            },
            "fmAuthorization": {
              "type": "string",
              "nullable": true
            },
            "fmMmsClubId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "zfClientId": {
              "type": "string",
              "nullable": true
            },
            "zfClientSecret": {
              "type": "string",
              "nullable": true
            },
            "zfRegionId": {
              "type": "string",
              "nullable": true
            },
            "zfSiteId": {
              "type": "string",
              "nullable": true
            },
            "mbSiteId": {
              "type": "string",
              "nullable": true
            },
            "mbLocationId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "mtLocationId": {
              "type": "string",
              "nullable": true
            },
            "mtClientSite": {
              "type": "string",
              "nullable": true
            },
            "mtClientSecret": {
              "type": "string",
              "nullable": true
            },
            "showStudioSessionsInApp": {
              "type": "boolean"
            },
            "defaultBookingOpeningTime": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "autoscheduleSessions": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "UpdatedLocationWebhookModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "url": {
              "type": "string",
              "nullable": true
            },
            "secretToken": {
              "type": "string",
              "nullable": true
            },
            "secretTokenHeaderName": {
              "type": "string",
              "nullable": true
            },
            "events": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LocationEventId"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdatedPlanModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/PlanType"
            },
            "playlistType": {
              "$ref": "#/components/schemas/PlanPlaylistType"
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "bodyXml": {
              "type": "string",
              "nullable": true
            },
            "dateCreated": {
              "type": "string",
              "format": "date-time"
            },
            "userId": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "UpdatedRegionModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "enterpriseId": {
              "type": "integer",
              "format": "int32"
            },
            "address": {
              "type": "string",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "contactPerson": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdatedRoomBattleModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "participantsCount": {
              "type": "integer",
              "format": "int32"
            },
            "roomIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdatedRoomModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "locationId": {
              "type": "integer",
              "format": "int32"
            },
            "rows": {
              "type": "integer",
              "format": "int32"
            },
            "columns": {
              "type": "integer",
              "format": "int32"
            },
            "roomTypeId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "fmResourceId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "zfRoomId": {
              "type": "string",
              "nullable": true
            },
            "waspCollectorName": {
              "type": "string",
              "nullable": true
            },
            "mindBodyClasses": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "zingFitClasses": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "screens": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UpdatedScreenItemModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdatedScreenItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "deviceName": {
              "type": "string",
              "nullable": true
            },
            "rows": {
              "type": "integer",
              "format": "int32"
            },
            "columns": {
              "type": "integer",
              "format": "int32"
            },
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "bikes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UpdatedBikeItemModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdatedScreenModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "deviceName": {
              "type": "string",
              "nullable": true
            },
            "display": {
              "type": "integer",
              "format": "int32"
            },
            "rows": {
              "type": "integer",
              "format": "int32"
            },
            "columns": {
              "type": "integer",
              "format": "int32"
            },
            "bikes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UpdateBikeScreenItemModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdatedSessionConfigurationModel": {
          "type": "object",
          "properties": {
            "areMetricsVisible": {
              "type": "boolean"
            },
            "isAppGaugeVisible": {
              "type": "boolean"
            },
            "isAppPlanVisible": {
              "type": "boolean"
            },
            "isVideoVisible": {
              "type": "boolean"
            },
            "isStudioGaugeVisible": {
              "type": "boolean"
            },
            "isStudioPlanVisible": {
              "type": "boolean"
            },
            "isStudioTargetVisible": {
              "type": "boolean"
            },
            "areStudioTimersVisible": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "UpdatedSessionImageModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdatedSessionModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "beginTime": {
              "type": "string",
              "format": "date-time"
            },
            "localBeginTime": {
              "type": "string",
              "format": "date-time"
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/BookingSessionType"
            },
            "classTypeId": {
              "$ref": "#/components/schemas/ClassTypeId"
            },
            "classModeId": {
              "$ref": "#/components/schemas/ClassModeId"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "instructorId": {
              "type": "integer",
              "format": "int32"
            },
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "locationId": {
              "type": "integer",
              "format": "int32"
            },
            "enterpriseId": {
              "type": "integer",
              "format": "int32"
            },
            "availableToBookBefore": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "autoEndExtension": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "isAutoscheduled": {
              "type": "boolean",
              "nullable": true
            },
            "fmId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "planId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "competitionId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "spotifyLink": {
              "type": "string",
              "nullable": true
            },
            "groupId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "recurrentGroupId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "recurrentTypeId": {
              "$ref": "#/components/schemas/RecurrentTypeId"
            },
            "recurrentEndDateTime": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "configuration": {
              "$ref": "#/components/schemas/UpdatedSessionConfigurationModel"
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UpdatedSessionTagModel"
              },
              "nullable": true
            },
            "integrationType": {
              "$ref": "#/components/schemas/IntegrationType"
            }
          },
          "additionalProperties": false
        },
        "UpdatedSessionTagModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "classCSS": {
              "type": "string",
              "nullable": true
            },
            "categoryId": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "UpdatedUserFtpModel": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "ftpBefore": {
              "type": "integer",
              "format": "int32"
            },
            "ftpAfter": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "UpdatedUserImageModel": {
          "type": "object",
          "properties": {
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "imageKey": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdatedUserIntegrationsModel": {
          "type": "object",
          "properties": {
            "isStravaSynced": {
              "type": "boolean"
            },
            "isTrainingPeaksSynced": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "UpdatedUserLocationModel": {
          "type": "object",
          "properties": {
            "locationId": {
              "type": "integer",
              "format": "int32"
            },
            "roleId": {
              "type": "integer",
              "format": "int32"
            },
            "locationName": {
              "type": "string",
              "nullable": true
            },
            "roleName": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdatedUserModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "firstName": {
              "type": "string",
              "nullable": true
            },
            "lastName": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "phoneCountryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "fullPhoneNumber": {
              "type": "string",
              "nullable": true
            },
            "nickname": {
              "type": "string",
              "nullable": true
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date-time"
            },
            "countryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "genderId": {
              "type": "integer",
              "format": "int32"
            },
            "maxHr": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "weightKg": {
              "type": "number",
              "format": "double"
            },
            "ftp": {
              "type": "integer",
              "format": "int32"
            },
            "isFtpLocked": {
              "type": "boolean"
            },
            "primaryBeltId": {
              "type": "string",
              "nullable": true
            },
            "roleIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "belts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StringStringKeyValuePair"
              },
              "nullable": true
            },
            "receiveEmails": {
              "type": "boolean"
            },
            "showInLeaderboard": {
              "type": "boolean"
            },
            "showInStudioLeaderboard": {
              "type": "boolean"
            },
            "unitsType": {
              "$ref": "#/components/schemas/UnitsType"
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "language": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "spotifyLink": {
              "type": "string",
              "nullable": true
            },
            "isBrowserAnalyticsAllowed": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "UpdatedUserSettingsModel": {
          "type": "object",
          "properties": {
            "showInLeaderboard": {
              "type": "boolean"
            },
            "showInStudioLeaderboard": {
              "type": "boolean"
            },
            "receiveEmails": {
              "type": "boolean"
            },
            "unitsType": {
              "$ref": "#/components/schemas/UnitsType"
            },
            "language": {
              "type": "string",
              "nullable": true
            },
            "isBrowserAnalyticsAllowed": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "UpdatedVideoModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "title": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "thumbnailUrl": {
              "type": "string",
              "nullable": true
            },
            "owner": {
              "$ref": "#/components/schemas/UserInfoModel"
            },
            "tagIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "enterpriseIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdateEnterpriseConfigurationModel": {
          "type": "object",
          "properties": {
            "customFieldType": {
              "$ref": "#/components/schemas/CustomFieldType"
            },
            "timersToggle": {
              "type": "boolean"
            },
            "experiencesInSession": {
              "type": "boolean"
            },
            "classLeaderboardToggle": {
              "type": "boolean"
            },
            "emojiPolling": {
              "type": "boolean"
            },
            "startingGauge": {
              "type": "boolean"
            },
            "shouldTurnOffDisplay": {
              "type": "boolean"
            },
            "uniteTargetAndPlan": {
              "type": "boolean"
            },
            "lockUserDeletion": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "UpdateEnterpriseModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "logoUrl": {
              "type": "string",
              "nullable": true
            },
            "address": {
              "type": "string",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "phoneCountryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "contactPerson": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdateExperienceModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "experienceTypeId": {
              "$ref": "#/components/schemas/ExperienceTypeId"
            },
            "isAvailableOnDemand": {
              "type": "boolean"
            },
            "isRecommended": {
              "type": "boolean"
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "spotifyLink": {
              "type": "string",
              "nullable": true
            },
            "instructorId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "planId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "enterprisesIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "tagsIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdateExternalIdentityModel": {
          "type": "object",
          "properties": {
            "externalId": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdateLeaderboardsConfigurationModel": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/LeaderboardsConfigurationType"
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "durationStatus": {
              "type": "boolean"
            },
            "distanceStatus": {
              "type": "boolean"
            },
            "caloriesStatus": {
              "type": "boolean"
            },
            "avgPowerStatus": {
              "type": "boolean"
            },
            "maxPowerStatus": {
              "type": "boolean"
            },
            "avgSpeedStatus": {
              "type": "boolean"
            },
            "maxSpeedStatus": {
              "type": "boolean"
            },
            "avgCadenceStatus": {
              "type": "boolean"
            },
            "maxCadenceStatus": {
              "type": "boolean"
            },
            "wattsPerKgFiveSecondsStatus": {
              "type": "boolean"
            },
            "wattsPerKgThirtySecondsStatus": {
              "type": "boolean"
            },
            "wattsPerKgOneMinuteStatus": {
              "type": "boolean"
            },
            "wattsPerKgThreeMinutesStatus": {
              "type": "boolean"
            },
            "wattsPerKgFiveMinutesStatus": {
              "type": "boolean"
            },
            "wattsPerKgTwentyMinutesStatus": {
              "type": "boolean"
            },
            "wattsPerKgThirtyMinutesStatus": {
              "type": "boolean"
            },
            "wattsPerKgSixtyMinutesStatus": {
              "type": "boolean"
            },
            "beatsAccuracy": {
              "type": "boolean"
            },
            "customScore": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "UpdateLocationModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "regionId": {
              "type": "integer",
              "format": "int32"
            },
            "isEnabled": {
              "type": "boolean"
            },
            "address": {
              "type": "string",
              "nullable": true
            },
            "phoneCountryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "disableBooking": {
              "type": "boolean"
            },
            "contactPerson": {
              "type": "string",
              "nullable": true
            },
            "logoUrl": {
              "type": "string",
              "nullable": true
            },
            "countryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "timeZoneId": {
              "type": "string",
              "nullable": true
            },
            "language": {
              "type": "string",
              "nullable": true
            },
            "v1Sync": {
              "type": "boolean",
              "nullable": true
            },
            "sessionAutoEndExtension": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "showBookingsAheadMinutes": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "profilesOwnerEmail": {
              "type": "string",
              "nullable": true
            },
            "defaultGaugeType": {
              "$ref": "#/components/schemas/GaugeType"
            },
            "unitsType": {
              "$ref": "#/components/schemas/UnitsType"
            },
            "integrationType": {
              "$ref": "#/components/schemas/IntegrationType"
            },
            "fmAuthorization": {
              "type": "string",
              "nullable": true
            },
            "fmMmsClubId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "zfClientId": {
              "type": "string",
              "nullable": true
            },
            "zfClientSecret": {
              "type": "string",
              "nullable": true
            },
            "zfRegionId": {
              "type": "string",
              "nullable": true
            },
            "zfSiteId": {
              "type": "string",
              "nullable": true
            },
            "mbSiteId": {
              "type": "string",
              "nullable": true
            },
            "mbLocationId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "mtLocationId": {
              "type": "string",
              "nullable": true
            },
            "mtClientSite": {
              "type": "string",
              "nullable": true
            },
            "mtClientSecret": {
              "type": "string",
              "nullable": true
            },
            "showStudioSessionsInApp": {
              "type": "boolean"
            },
            "defaultBookingOpeningTime": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "autoscheduleSessions": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "UpdateLocationWebhookModel": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "nullable": true
            },
            "secretToken": {
              "type": "string",
              "nullable": true
            },
            "secretTokenHeaderName": {
              "type": "string",
              "nullable": true
            },
            "events": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LocationEventId"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdatePlanModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "type": {
              "$ref": "#/components/schemas/PlanType"
            },
            "intervals": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PlanIntervalModel"
              },
              "nullable": true
            },
            "playlist": {
              "$ref": "#/components/schemas/PlanPlaylistModel"
            },
            "userId": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "UpdateRegionModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "enterpriseId": {
              "type": "integer",
              "format": "int32"
            },
            "address": {
              "type": "string",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "contactPerson": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdateRoomBattleModel": {
          "type": "object",
          "properties": {
            "roomIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdateRoomModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "locationId": {
              "type": "integer",
              "format": "int32"
            },
            "rows": {
              "type": "integer",
              "format": "int32"
            },
            "columns": {
              "type": "integer",
              "format": "int32"
            },
            "roomTypeId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "fmResourceId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "zfRoomId": {
              "type": "string",
              "nullable": true
            },
            "waspCollectorName": {
              "type": "string",
              "nullable": true
            },
            "mindBodyClasses": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "zingFitClasses": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdateScreenModel": {
          "type": "object",
          "properties": {
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "deviceName": {
              "type": "string",
              "nullable": true
            },
            "rows": {
              "type": "integer",
              "format": "int32"
            },
            "columns": {
              "type": "integer",
              "format": "int32"
            },
            "display": {
              "type": "integer",
              "format": "int32"
            },
            "bikes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UpdateBikeScreenItemModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdateSessionConfigurationModel": {
          "type": "object",
          "properties": {
            "areMetricsVisible": {
              "type": "boolean"
            },
            "isAppGaugeVisible": {
              "type": "boolean"
            },
            "isAppPlanVisible": {
              "type": "boolean"
            },
            "isVideoVisible": {
              "type": "boolean"
            },
            "isStudioGaugeVisible": {
              "type": "boolean"
            },
            "isStudioPlanVisible": {
              "type": "boolean"
            },
            "isStudioTargetVisible": {
              "type": "boolean"
            },
            "areStudioTimersVisible": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "UpdateSessionModel": {
          "type": "object",
          "properties": {
            "beginTime": {
              "type": "string",
              "format": "date-time"
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/BookingSessionType"
            },
            "classTypeId": {
              "$ref": "#/components/schemas/ClassTypeId"
            },
            "classModeId": {
              "$ref": "#/components/schemas/ClassModeId"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "instructorId": {
              "type": "integer",
              "format": "int32"
            },
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "availableToBookBefore": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "autoEndExtension": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "isAutoscheduled": {
              "type": "boolean",
              "nullable": true
            },
            "fmId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "planId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "competitionId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "spotifyLink": {
              "type": "string",
              "nullable": true
            },
            "recurrentGroupId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "recurrentTypeId": {
              "$ref": "#/components/schemas/RecurrentTypeId"
            },
            "recurrentEndDateTime": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "recurrentUpdateType": {
              "$ref": "#/components/schemas/RecurrentSessionUpdateType"
            },
            "configuration": {
              "$ref": "#/components/schemas/UpdateSessionConfigurationModel"
            },
            "tagsIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdateUserFtpModel": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "ftp": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdateUserIntegrationsModel": {
          "type": "object",
          "properties": {
            "isSynced": {
              "type": "boolean"
            },
            "type": {
              "$ref": "#/components/schemas/UserIntegrationType"
            }
          },
          "additionalProperties": false
        },
        "UpdateUserLocationModel": {
          "type": "object",
          "properties": {
            "roleId": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "UpdateUserModel": {
          "type": "object",
          "properties": {
            "firstName": {
              "type": "string",
              "nullable": true
            },
            "lastName": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "phoneCountryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "nickname": {
              "type": "string",
              "nullable": true
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date-time"
            },
            "countryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "genderId": {
              "type": "integer",
              "format": "int32"
            },
            "maxHr": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "weightKg": {
              "type": "number",
              "format": "double"
            },
            "ftp": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "isFtpLocked": {
              "type": "boolean"
            },
            "primaryBeltId": {
              "type": "string",
              "nullable": true
            },
            "roleIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "beltIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Deprecated. Will be used if IsBeltsActive is false.",
              "nullable": true
            },
            "isBeltsActive": {
              "type": "boolean",
              "description": "Flag to indicate if Belts array should be used instead of BeltIds."
            },
            "belts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StringStringKeyValuePair"
              },
              "nullable": true
            },
            "receiveEmails": {
              "type": "boolean"
            },
            "showInLeaderboard": {
              "type": "boolean"
            },
            "showInStudioLeaderboard": {
              "type": "boolean"
            },
            "unitsType": {
              "$ref": "#/components/schemas/UnitsType"
            },
            "password": {
              "type": "string",
              "nullable": true
            },
            "language": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "spotifyLink": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdateUserSettingsModel": {
          "type": "object",
          "properties": {
            "showInLeaderboard": {
              "type": "boolean"
            },
            "showInStudioLeaderboard": {
              "type": "boolean"
            },
            "receiveEmails": {
              "type": "boolean"
            },
            "unitsType": {
              "$ref": "#/components/schemas/UnitsType"
            },
            "language": {
              "type": "string",
              "nullable": true
            },
            "isBrowserAnalyticsAllowed": {
              "type": "boolean",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UpdateVideoModel": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "tagIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "enterpriseIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UserBookingItemBikeModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "sensorId": {
              "type": "string",
              "nullable": true
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32"
            },
            "columnNumber": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "rowNumber": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "isPower": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "UserBookingItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "session": {
              "$ref": "#/components/schemas/UserBookingItemSessionModel"
            },
            "bike": {
              "$ref": "#/components/schemas/UserBookingItemBikeModel"
            }
          },
          "additionalProperties": false
        },
        "UserBookingItemModelPagedResult": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UserBookingItemModel"
              },
              "nullable": true
            },
            "totalRecords": {
              "type": "integer",
              "format": "int32"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "UserBookingItemSessionModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "beginTime": {
              "type": "string",
              "format": "date-time"
            },
            "localBeginTime": {
              "type": "string",
              "format": "date-time"
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/BookingSessionType"
            },
            "classTypeId": {
              "$ref": "#/components/schemas/ClassTypeId"
            },
            "classModeId": {
              "$ref": "#/components/schemas/ClassModeId"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "instructor": {
              "$ref": "#/components/schemas/UserInfoModel"
            },
            "roomId": {
              "type": "integer",
              "format": "int32"
            },
            "roomName": {
              "type": "string",
              "nullable": true
            },
            "locationId": {
              "type": "integer",
              "format": "int32"
            },
            "locationName": {
              "type": "string",
              "nullable": true
            },
            "isLocationEnabled": {
              "type": "boolean"
            },
            "videoId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "planId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "competitionId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "planImageUrl": {
              "type": "string",
              "nullable": true
            },
            "availableToBookBefore": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "totalParticipants": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "totalVirtualParticipants": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "totalBookedSpots": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "totalAvailableSpots": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "fmId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "zfId": {
              "type": "string",
              "nullable": true
            },
            "mbId": {
              "type": "string",
              "nullable": true
            },
            "isSpotifyIncluded": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "UserBookingSessionItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "user": {
              "$ref": "#/components/schemas/UserInfoModel"
            },
            "bookingSessionId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "userId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "powerId": {
              "type": "string",
              "nullable": true
            },
            "hrId": {
              "type": "string",
              "nullable": true
            },
            "username": {
              "type": "string",
              "nullable": true
            },
            "ftp": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "isFtpLocked": {
              "type": "boolean"
            },
            "isDefaultFtp": {
              "type": "boolean"
            },
            "maxHr": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "weightKg": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "age": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "genderId": {
              "$ref": "#/components/schemas/GenderId"
            },
            "availableToBookBefore": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "showInStudioLeaderboard": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "UserDetailsModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "firstName": {
              "type": "string",
              "nullable": true
            },
            "lastName": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "phoneCountryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "nullable": true
            },
            "fullPhoneNumber": {
              "type": "string",
              "nullable": true
            },
            "nickname": {
              "type": "string",
              "nullable": true
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date-time"
            },
            "genderId": {
              "type": "integer",
              "format": "int32"
            },
            "countryId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxHr": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "weightKg": {
              "type": "number",
              "format": "double"
            },
            "ftp": {
              "type": "integer",
              "format": "int32"
            },
            "isFtpLocked": {
              "type": "boolean"
            },
            "isDefaultFtp": {
              "type": "boolean"
            },
            "primaryBeltId": {
              "type": "string",
              "nullable": true
            },
            "roleIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "externalId": {
              "type": "string",
              "nullable": true
            },
            "externalSourceId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "belts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StringStringKeyValuePair"
              },
              "nullable": true
            },
            "receiveEmails": {
              "type": "boolean"
            },
            "showInLeaderboard": {
              "type": "boolean"
            },
            "showInStudioLeaderboard": {
              "type": "boolean"
            },
            "unitsType": {
              "$ref": "#/components/schemas/UnitsType"
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "language": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "spotifyLink": {
              "type": "string",
              "nullable": true
            },
            "age": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "totalWorkouts": {
              "type": "integer",
              "format": "int32"
            },
            "calories": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "images": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UserDetailsUserImageModel"
              },
              "nullable": true
            },
            "isStravaSynced": {
              "type": "boolean"
            },
            "isTrainingPeaksSynced": {
              "type": "boolean"
            },
            "isBrowserAnalyticsAllowed": {
              "type": "boolean",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UserDetailsUserImageModel": {
          "type": "object",
          "properties": {
            "imageKey": {
              "type": "string",
              "nullable": true
            },
            "url": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UserEnterpriseConfiguration": {
          "type": "object",
          "properties": {
            "timersToggle": {
              "type": "boolean"
            },
            "experiencesInSession": {
              "type": "boolean"
            },
            "classLeaderboardToggle": {
              "type": "boolean"
            },
            "emojiPolling": {
              "type": "boolean"
            },
            "startingGauge": {
              "type": "boolean"
            },
            "shouldTurnOffDisplay": {
              "type": "boolean"
            },
            "uniteTargetAndPlan": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "UserEnterpriseItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UserInfoModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "firstName": {
              "type": "string",
              "nullable": true
            },
            "lastName": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UserIntegrationType": {
          "enum": [
            1,
            2
          ],
          "type": "integer",
          "format": "int32"
        },
        "UserItemImageModel": {
          "type": "object",
          "properties": {
            "imageKey": {
              "type": "string",
              "nullable": true
            },
            "url": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UserItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "displayName": {
              "type": "string",
              "nullable": true
            },
            "email": {
              "type": "string",
              "nullable": true
            },
            "phone": {
              "type": "string",
              "nullable": true
            },
            "firstName": {
              "type": "string",
              "nullable": true
            },
            "lastName": {
              "type": "string",
              "nullable": true
            },
            "genderId": {
              "type": "integer",
              "format": "int32"
            },
            "dateCreated": {
              "type": "string",
              "format": "date-time"
            },
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "images": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UserItemImageModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UserItemModelPagedResult": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UserItemModel"
              },
              "nullable": true
            },
            "totalRecords": {
              "type": "integer",
              "format": "int32"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "UserLocationItemModel": {
          "type": "object",
          "properties": {
            "locationId": {
              "type": "integer",
              "format": "int32"
            },
            "roleId": {
              "type": "integer",
              "format": "int32"
            },
            "locationName": {
              "type": "string",
              "nullable": true
            },
            "roleName": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UserPurchaseModel": {
          "type": "object",
          "properties": {
            "source": {
              "$ref": "#/components/schemas/PurchaseSource"
            },
            "productId": {
              "type": "string",
              "nullable": true
            },
            "isAutoRenew": {
              "type": "boolean"
            },
            "autoRenewProductId": {
              "type": "string",
              "nullable": true
            },
            "expirationDate": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "state": {
              "$ref": "#/components/schemas/SubscriptionState"
            }
          },
          "additionalProperties": false
        },
        "UserRoomItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "remoteAccess": {
              "type": "boolean"
            },
            "screens": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UserRoomScreenItemModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UserRoomScreenItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UserSubscriptionItemModel": {
          "type": "object",
          "properties": {
            "locationId": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "$ref": "#/components/schemas/SubscriptionType"
            }
          },
          "additionalProperties": false
        },
        "UserWorkoutItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "beginTime": {
              "type": "string",
              "format": "date-time"
            },
            "durationInSeconds": {
              "type": "integer",
              "format": "int32"
            },
            "thumbnailUrl": {
              "type": "string",
              "nullable": true
            },
            "distanceInKm": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "kiloCalories": {
              "type": "integer",
              "format": "int32"
            },
            "heartRate": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "avgWatt": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "avgSpeed": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxSpeed": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "avgHeartRate": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "userId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "avgCadence": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxWatt": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxCadence": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "typeId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "experienceId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "sessionId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "beatsAccuracy": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "autoBeatsAccuracy": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "powerAccuracy": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "customField": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "cumulativeBeatsScore": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "instructor": {
              "$ref": "#/components/schemas/UserInfoModel"
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WorkoutItemTagModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UserWorkoutItemModelPagedResult": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UserWorkoutItemModel"
              },
              "nullable": true
            },
            "totalRecords": {
              "type": "integer",
              "format": "int32"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "V1ImportWorkoutStatusType": {
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "format": "int32"
        },
        "VerifySubscriptionModel": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "integer",
              "format": "int32"
            },
            "productId": {
              "type": "string",
              "nullable": true
            },
            "token": {
              "type": "string",
              "nullable": true
            },
            "source": {
              "$ref": "#/components/schemas/PurchaseSource"
            }
          },
          "additionalProperties": false
        },
        "VideoItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "externalId": {
              "type": "integer",
              "format": "int32"
            },
            "title": {
              "type": "string",
              "nullable": true
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "thumbnailUrl": {
              "type": "string",
              "nullable": true
            },
            "streamUrls": {
              "$ref": "#/components/schemas/VideoUrlModel"
            },
            "owner": {
              "$ref": "#/components/schemas/UserInfoModel"
            },
            "dateUploaded": {
              "type": "string",
              "format": "date-time"
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/VideoItemTagModel"
              },
              "nullable": true
            },
            "enterprises": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "externalUid": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "VideoItemModelPagedResult": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/VideoItemModel"
              },
              "nullable": true
            },
            "totalRecords": {
              "type": "integer",
              "format": "int32"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "VideoItemTagModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "classCSS": {
              "type": "string",
              "nullable": true
            },
            "enterpriseId": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "VideosSortType": {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer",
          "format": "int32"
        },
        "VideoTagModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "classCSS": {
              "type": "string",
              "nullable": true
            },
            "enterpriseId": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "VideoUrlModel": {
          "type": "object",
          "properties": {
            "hlsUrl": {
              "type": "string",
              "nullable": true
            },
            "rtspUrl": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "WorkoutCoordinateModel": {
          "type": "object",
          "properties": {
            "timeStamp": {
              "type": "integer",
              "format": "int32"
            },
            "latitude": {
              "type": "number",
              "format": "float",
              "nullable": true
            },
            "longitude": {
              "type": "number",
              "format": "float",
              "nullable": true
            },
            "altitude": {
              "type": "integer",
              "format": "int32"
            },
            "speed": {
              "type": "number",
              "format": "float",
              "nullable": true
            },
            "horizontalAccuracy": {
              "type": "integer",
              "format": "int32"
            },
            "verticalAccuracy": {
              "type": "integer",
              "format": "int32"
            },
            "distanceInMeters": {
              "type": "number",
              "format": "float"
            },
            "beatsScore": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "powerScore": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "WorkoutDetailsItemTagModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "classCSS": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "WorkoutDetailsModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "beginTime": {
              "type": "string",
              "format": "date-time"
            },
            "durationInSeconds": {
              "type": "integer",
              "format": "int32"
            },
            "distanceInKm": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "kiloCalories": {
              "type": "integer",
              "format": "int32"
            },
            "heartRate": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "avgWatt": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "avgSpeed": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxSpeed": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "avgHeartRate": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "userId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "bikeId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "bikeNumber": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "avgCadence": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxWatt": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "maxCadence": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "typeId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "beatsAccuracy": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "powerAccuracy": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "experienceId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "sessionId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "thumbnailUrl": {
              "type": "string",
              "nullable": true
            },
            "customField": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "instructor": {
              "$ref": "#/components/schemas/UserInfoModel"
            },
            "coordData": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WorkoutCoordinateModel"
              },
              "nullable": true
            },
            "heartRateData": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WorkoutHeartRateModel"
              },
              "nullable": true
            },
            "powerData": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WorkoutPowerModel"
              },
              "nullable": true
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WorkoutDetailsItemTagModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "WorkoutHeartRateModel": {
          "type": "object",
          "properties": {
            "timeStamp": {
              "type": "integer",
              "format": "int32"
            },
            "heartRate": {
              "type": "integer",
              "format": "int32"
            },
            "graphHeartRate": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "WorkoutItemTagModel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "classCSS": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "WorkoutPowerModel": {
          "type": "object",
          "properties": {
            "timeStamp": {
              "type": "integer",
              "format": "int32"
            },
            "power": {
              "type": "integer",
              "format": "int32"
            },
            "accumulatedPower": {
              "type": "integer",
              "format": "int32"
            },
            "accumulatedPowerEventCount": {
              "type": "integer",
              "format": "int32"
            },
            "cadence": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "WorkoutTypeId": {
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer",
          "format": "int32"
        },
        "WorkoutTypeItemModel": {
          "type": "object",
          "properties": {
            "id": {
              "$ref": "#/components/schemas/WorkoutTypeId"
            },
            "displayName": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        }
      },
      "securitySchemes": {
        "oauth2": {
          "type": "oauth2",
          "description": "See more on https://www.oauth.com/oauth2-servers/access-tokens/client-credentials/",
          "flows": {
            "implicit": {
              "authorizationUrl": "https://identity.stagescloud.com/connect/authorize",
              "scopes": {
                "stages-web": "Stages cloud API - full access"
              }
            },
            "clientCredentials": {
              "tokenUrl": "https://identity.stagescloud.com/connect/token",
              "scopes": {
                "stages-web": "Stages cloud API - read access"
              }
            }
          }
        }
      }
    },
    "security": [
      {
        "oauth2": [
          "stages-web"
        ]
      }
    ],
    "tags": [
      {
        "name": "ApiClients",
        "description": "API Clients are used by integrators to consume StagesFlight APIs. The API client models an OpenID Connect or OAuth 2.0 client - e.g. a native application, a web application or a JS-based application.More info here http://docs.identityserver.io/en/latest/reference/client.html."
      }
    ]
  }